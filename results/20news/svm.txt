Mean validation score: 0.7608278409488276
std: 0.005376663372440261
Parameters: {'clf__C': 1.0437490839744141, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.5305045599216338e-05, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0001839752552740118, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}
accruracy = 0.6958311205523101

{'clf__C': 1.0437490839744141, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.5305045599216338e-05, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0001839752552740118, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}

{'mean_fit_time': array([  8.57169375, 261.79042039, 979.07155561,  33.35620742,
        25.56105061,  16.32481394,  24.41183391,  14.84287834,
         4.4041142 ,  19.44331565,  24.18340058,  47.04169722,
        41.00066152,  44.67719908,   4.38496561,  32.21472421,
        53.03451962,  30.69650149,   5.37160006,   4.15794973,
         4.25807729,  15.01227522,  41.12028522,   9.19703293,
        13.94020658,  15.99734693, 487.41046777, 192.16064181,
         7.05549483,   5.04189825,   8.57948179,  16.5354105 ,
        16.63350172,  11.95392284,  14.03209338,   4.29055705,
        17.26319036,  24.99116483,  15.18936887,  15.65470114,
         5.74704466,  15.00278544,   9.1842648 ,  26.15090923,
         4.33569288,   4.34541202,  47.93129125,   9.62251654,
        37.57763586,  14.18663797,  11.07472053,   6.9857368 ,
        36.0551178 , 330.96663103,  19.27767997, 411.37852736,
        18.70336242,  15.25058618,  29.17047935,   3.8830174 ,
        12.72503567,  51.75330172, 102.12987967,  17.25571685,
        16.02568188,  15.90055833,  38.35042939,   5.37504539,
        32.64296055,   7.4055716 ,  14.37460413,  17.42047658,
        12.70926213,   5.4737597 ,  12.39240046,  13.42195296,
        45.00763154,  14.12624173,   7.26114159,   7.75947585,
        21.37077661,  16.62391787,  11.0178524 ,  39.37096944,
       295.98012729,  25.31479568,  10.33087549,  52.88711295,
        21.36744952,   8.02464123,  24.28068738,  16.41580858,
       146.49580364,   3.44885936,   4.4445642 ,   3.22478523,
         4.48423972,  91.4026103 ,  40.73138962,  40.45055623,
        22.17941999,   8.84528174,  36.30646996,   5.90830841,
       260.49119091,   3.05990715,   4.9263772 ,   2.44933562,
         2.09283638,  84.66304765,  15.25855803, 299.07992358,
         8.82340016,   3.91058335,  29.7944468 ,  20.46406875,
         3.61906352,  34.75764565,  10.00310202,  57.05369391,
         3.69779077,  13.65484881,  34.31604323,  18.14664011,
        24.51428046,  42.0007412 ,   3.56050797,  17.28022223,
         5.47200131,   7.20717077,   5.71833205,  11.61924996,
         2.54174104,  44.70104575, 131.36395741, 132.43595467,
         3.64092503,  13.60485382,   5.04885602,  26.23197927,
        16.03397555,  13.41801448,  29.25812697,  11.42794738,
         2.99224663,   2.30839028,   4.82826147,   2.18796377,
       235.93484478,  11.71706681,  10.27786713,  17.56961842,
        14.18215246,   6.98090148,   7.73015394,  24.58830528,
        22.89639378,  42.69263964,  26.54252162,  15.28110666,
        10.80479302,   7.30850091,  11.17964659,  10.06456413,
         4.57220917,   3.79923158,   4.97905588,  10.75014205,
         2.90633583,   3.00528541,  14.32920814,  12.23510804,
         4.45613794,  16.54662156,  12.57164407,  22.96115365,
        23.03820086,   7.71834178,   3.01550632,   2.07699971,
        26.01824403,  18.04477429,   4.51076751,   9.82863345,
         2.87792706,  36.73867388,   8.74896941,   3.14676671,
        19.50511475, 144.30218534,  16.66493511,   7.23684745,
        42.7404016 ,   3.03498278,  18.36868119,  18.10378017,
        21.8236763 ,  12.41427717,   3.87305245,   6.82686586]), 'std_fit_time': array([1.27911039, 1.86902544, 2.15260482, 0.86979225, 0.25223329,
       0.16279186, 0.31879563, 1.97087073, 0.09389244, 0.33973525,
       0.11140435, 4.27716987, 1.13615638, 3.02705045, 0.05777087,
       0.64215434, 7.99327043, 0.31995154, 0.09179545, 0.08224575,
       0.10627219, 0.38597283, 0.55211524, 0.65679629, 0.14197095,
       0.27399259, 3.05379277, 1.44963527, 0.49631335, 0.09000931,
       0.16371841, 1.13456536, 0.31258035, 0.15519486, 0.13412293,
       0.06436737, 0.27432816, 0.36594079, 0.17542867, 0.17254607,
       0.1063983 , 0.1916496 , 0.12109362, 0.57746369, 0.1559502 ,
       0.06714381, 5.05436583, 0.34752976, 1.47998682, 0.11488265,
       0.22495163, 0.06125041, 0.85452008, 1.96416783, 0.19615665,
       4.50283911, 1.77855577, 0.14601703, 0.28519715, 0.18218068,
       0.36131121, 1.34159107, 0.76465004, 0.26312594, 0.46799027,
       0.48830956, 1.15078705, 0.2218533 , 0.14437747, 0.4363681 ,
       0.17179584, 0.38044117, 0.29207417, 0.66633047, 0.65336567,
       0.29270266, 0.58888457, 0.50040432, 0.70809687, 0.12633354,
       1.04861295, 0.55421157, 1.34417885, 1.05001438, 4.11692717,
       0.40029071, 0.22272552, 1.01817092, 0.23454577, 0.26041049,
       1.49580276, 1.11903885, 2.14038745, 0.22527993, 0.0770368 ,
       0.04479225, 0.233672  , 1.27102409, 4.64535134, 0.95382273,
       0.22745212, 0.30439001, 1.06296567, 0.44823177, 3.12820425,
       0.09245954, 1.03060782, 0.07410969, 0.07802125, 7.7055881 ,
       0.57117956, 4.93263324, 0.14699059, 0.0717714 , 0.34681811,
       0.62255801, 0.19430514, 3.19277197, 0.23949941, 2.16615687,
       0.13325607, 1.21863521, 0.38821483, 0.50363529, 0.73655052,
       0.55672497, 0.22389519, 3.06866666, 0.49254979, 0.09018331,
       0.48377943, 0.23971693, 0.03433138, 1.43858629, 2.98178665,
       1.03291741, 0.32706669, 0.4913833 , 0.30179026, 0.13539509,
       0.46369579, 0.26378048, 1.59557247, 2.6583625 , 0.07311237,
       0.15394127, 0.06914879, 0.06195385, 2.74194677, 0.67446074,
       0.43953955, 0.99195951, 0.48200665, 0.87861884, 1.04694047,
       0.30499683, 0.20186333, 0.58176598, 0.75547127, 0.34338215,
       0.966157  , 0.16198322, 0.32882707, 0.17339525, 0.23120972,
       0.20997716, 0.16597415, 0.15202002, 0.08805469, 0.1214914 ,
       0.52442596, 0.28159937, 0.6604624 , 0.35055603, 0.48501193,
       1.2440499 , 0.13659976, 0.84460995, 0.2164699 , 0.1586784 ,
       0.57798546, 0.55974965, 0.41258523, 0.13157642, 0.14456999,
       0.47872266, 0.13125296, 0.09459793, 0.46101182, 1.02230394,
       1.59485458, 0.06033344, 4.60221611, 0.07295963, 0.38702452,
       0.37463005, 0.61240946, 0.48964332, 0.10525376, 0.62745236]), 'mean_score_time': array([0.92075386, 0.90983162, 1.4824254 , 2.37000141, 2.32406945,
       1.09211769, 1.7741375 , 1.12020307, 0.        , 1.03652868,
       1.14841585, 2.16212635, 1.06484408, 1.50399489, 0.        ,
       2.49646025, 1.45657058, 1.67941227, 0.93048134, 0.        ,
       0.7677947 , 0.        , 0.83115764, 1.05965266, 0.        ,
       1.33528304, 0.98553944, 1.61466007, 0.96213193, 0.        ,
       1.16582475, 0.        , 0.        , 0.88809223, 0.        ,
       0.        , 0.        , 2.40692673, 0.        , 1.56147437,
       0.9923564 , 0.        , 0.89022264, 1.41694546, 0.        ,
       0.        , 2.24929438, 0.89347196, 1.9386519 , 0.92652755,
       1.03674521, 0.96431355, 1.02603555, 0.85917573, 2.13576608,
       1.48564034, 1.41959915, 1.25030189, 1.76685944, 0.        ,
       0.        , 1.89365458, 0.84657927, 1.48859067, 1.31973443,
       0.79025025, 2.17522402, 0.90553737, 2.07625566, 0.82154121,
       0.        , 1.38004003, 0.        , 0.62006574, 0.8968545 ,
       0.        , 1.96505389, 0.        , 0.83928347, 0.84357371,
       1.33629313, 1.28694715, 0.        , 1.28264823, 1.59870553,
       1.79207225, 0.83715224, 0.75665364, 1.47634168, 0.86609893,
       1.09608016, 1.5471138 , 1.93869042, 0.        , 0.79410005,
       0.        , 0.92322226, 0.8582655 , 1.73349829, 1.37467089,
       0.7319314 , 0.87243857, 0.73286204, 0.72946515, 1.788482  ,
       0.        , 0.66367497, 0.        , 0.        , 2.09221306,
       1.63204064, 0.68427343, 0.93325462, 0.        , 0.772435  ,
       1.19831867, 0.        , 1.73727036, 0.87422485, 1.26631594,
       0.        , 1.34096861, 1.66831412, 1.41373553, 1.28200426,
       1.13289375, 0.        , 0.90822778, 0.73308773, 0.64018426,
       0.56454134, 1.07355199, 0.        , 1.86647434, 1.94587984,
       1.38582721, 0.        , 0.        , 0.85808282, 1.86777625,
       1.53142624, 0.        , 1.33961124, 0.97388487, 0.50377798,
       0.        , 0.36575928, 0.        , 1.81065407, 0.        ,
       0.        , 0.73616614, 1.22391939, 0.74203696, 0.75975423,
       0.90030022, 1.49033785, 1.90297804, 0.90087543, 1.18420467,
       0.        , 0.62083006, 1.11906528, 0.        , 0.61818986,
       0.63854127, 0.61615858, 0.96444712, 0.        , 0.        ,
       1.18676515, 0.        , 0.58201523, 1.41201162, 0.        ,
       0.82848711, 1.47805552, 0.77130361, 0.        , 0.        ,
       1.39660873, 1.4598803 , 0.75755882, 0.94913492, 0.        ,
       1.17867646, 0.60193605, 0.        , 2.16820116, 0.30428133,
       0.70464983, 0.78398123, 2.13054266, 0.        , 1.44961877,
       1.68405948, 1.39186411, 0.88213081, 0.        , 0.41368647]), 'std_score_time': array([0.07609867, 0.04095209, 0.18718601, 0.13795661, 0.11356747,
       0.08860307, 0.06805425, 0.07669029, 0.        , 0.07490466,
       0.05118091, 0.16315588, 0.08058515, 0.07982453, 0.        ,
       0.14172786, 0.15842412, 0.20270799, 0.0485882 , 0.        ,
       0.07695527, 0.        , 0.06867562, 0.07990663, 0.        ,
       0.06043104, 0.06150711, 0.13641325, 0.06890074, 0.        ,
       0.07563559, 0.        , 0.        , 0.06512637, 0.        ,
       0.        , 0.        , 0.11290548, 0.        , 0.11332352,
       0.07077732, 0.        , 0.0598414 , 0.10624429, 0.        ,
       0.        , 0.12686585, 0.07610314, 0.0982321 , 0.04818265,
       0.06871731, 0.0640469 , 0.12747257, 0.09203843, 0.09182533,
       0.20066972, 0.12200176, 0.09304045, 0.13626293, 0.        ,
       0.        , 0.10563233, 0.06841834, 0.10810145, 0.09522695,
       0.05381055, 0.21199201, 0.07719957, 0.27909279, 0.08072381,
       0.        , 0.14817187, 0.        , 0.03725245, 0.05618818,
       0.        , 0.15520735, 0.        , 0.06503526, 0.08989772,
       0.1668977 , 0.19871538, 0.        , 0.17621741, 0.2090975 ,
       0.17653993, 0.08733796, 0.13389126, 0.13815201, 0.06988969,
       0.18326186, 0.16882408, 0.26638724, 0.        , 0.05221791,
       0.        , 0.04916136, 0.07854369, 0.15417381, 0.23168896,
       0.06168775, 0.09552954, 0.08999852, 0.09426988, 0.32448934,
       0.        , 0.11333953, 0.        , 0.        , 0.12864076,
       0.14518397, 0.03376052, 0.05101729, 0.        , 0.06862524,
       0.11674699, 0.        , 0.14761627, 0.08191772, 0.21055564,
       0.        , 0.0888782 , 0.12491367, 0.10223579, 0.16005094,
       0.17067093, 0.        , 0.0960055 , 0.05643718, 0.08290466,
       0.03287836, 0.06105023, 0.        , 0.17781724, 0.37017574,
       0.09793492, 0.        , 0.        , 0.07992586, 0.13765775,
       0.16676213, 0.        , 0.25236979, 0.22510506, 0.05739992,
       0.        , 0.0536756 , 0.        , 0.10458874, 0.        ,
       0.        , 0.18675083, 0.25666436, 0.12072829, 0.07428877,
       0.12533632, 0.12605435, 0.3958267 , 0.08491072, 0.25289171,
       0.        , 0.06222958, 0.09869311, 0.        , 0.08655315,
       0.03253785, 0.0325378 , 0.06133564, 0.        , 0.        ,
       0.25594329, 0.        , 0.08883391, 0.12060832, 0.        ,
       0.10633023, 0.14377427, 0.21302532, 0.        , 0.        ,
       0.08158968, 0.21406409, 0.14243635, 0.05163323, 0.        ,
       0.07715292, 0.06421073, 0.        , 0.17620852, 0.04086869,
       0.05085788, 0.06943803, 0.09094537, 0.        , 0.13933465,
       0.10966782, 0.26595634, 0.14726303, 0.        , 0.10103041]), 'param_clf__C': masked_array(data=[0.0033366940119486967, 750.064482300167,
                   910.6727219020366, 0.002230597688975375,
                   0.0013276677908624882, 0.0627999772170907,
                   4.9663882828210735, 1.082117773602524,
                   159.5280371906955, 12.8050221171652,
                   0.8864623907009376, 0.005081684197305675,
                   943.8772807525859, 83.2224851560117,
                   11.911696646732842, 0.030216667345205644,
                   4.292234467983982, 0.02299328191471927,
                   0.048629981296000595, 0.3745836749779732,
                   0.04182466356766506, 283.4852621381364,
                   669.8553088621197, 0.024511847686105825,
                   1.4249284366114714, 0.03049840851663483,
                   768.0645740168567, 52.22401660244008,
                   0.11494290142089728, 0.020848043324310315,
                   0.4131405898874502, 0.32608356222681745,
                   160.59136435541188, 0.33077753361130346,
                   19.481557656790713, 33.94976360370441,
                   576.991546117555, 0.09743080417977033,
                   71.91811241666407, 0.0021522973238422916,
                   0.004994156946077155, 0.07157457069082429,
                   0.009781973414431778, 25.992639014984153,
                   401.33541700822053, 60.63461352181013,
                   4.329458750584719, 1.817278958247897,
                   21.682856942663587, 0.008246702614289652,
                   0.01045957804333388, 0.001010237003010081,
                   21.541876562402017, 438.82185272227616,
                   0.03751226652017282, 420.81043164157467,
                   9.269749246511369, 0.060133587411548194,
                   2.9122379280905197, 0.13898267237265846,
                   8.05080935096422, 105.05316326635375,
                   507.45669576841016, 0.31868812418975007,
                   1.0428071180588914, 15.555510083115763,
                   0.02048677714588319, 0.0017786634490937325,
                   1.0437490839744141, 3.2135254994754887,
                   0.23443490852434357, 0.021980689912299272,
                   0.12943687048860233, 0.0482816854401468,
                   8.14100785513358, 101.67909140744352,
                   0.03475333544517487, 0.020653228062387986,
                   6.911146239912495, 0.016942261000849952,
                   0.059676367637535414, 0.13070301133122086,
                   0.0029775708023629614, 75.14258423768464,
                   405.157444943138, 0.05123756340958192,
                   7.225871855687549, 68.1120551379025,
                   0.021153065508369383, 0.0022480844777595676,
                   357.8875872055519, 3.9266232730915744,
                   43.07906054455111, 47.361382334031354,
                   0.0019522209917688003, 12.548279641729332,
                   0.01554423091419384, 58.849845879262716,
                   204.64478899433468, 506.65312695414104,
                   79.86818695044435, 0.43971573628117455,
                   3.8275309208861046, 0.00598223181338227,
                   64.35418263289, 0.00804914109305218, 1.027374476536659,
                   240.9896603186165, 123.3767107473311,
                   18.998966522218097, 0.10293505661591996,
                   250.53059232022224, 0.12924584165635786,
                   57.83805520202766, 36.26173544498667,
                   40.86034218929553, 22.6218129979559,
                   1.3470306518683304, 0.0010606590252788082,
                   112.46592014451117, 31.756700742474475,
                   0.5307459420240473, 2.527002613368308,
                   0.5337618944245031, 28.645695712016185,
                   431.16337081463644, 0.10299760764726297,
                   13.31869257817897, 0.5452868555939986,
                   1.225994430551375, 0.03810201865822455,
                   0.001589382518765842, 83.44292553405582,
                   21.257056548888908, 271.07949259424885,
                   46.586305948325275, 1.2228173663389144,
                   21.516923822986012, 0.12310936202739714,
                   0.11053086156950301, 0.17145034053108255,
                   1.168318418051294, 4.955782682935226,
                   0.04466314608300656, 0.7537491331977475,
                   1.4432925192781936, 2.939341814740996,
                   4.5930733276189555, 288.4125855014936,
                   0.03325280185523374, 395.93474978706,
                   237.08500831910283, 0.004888610123406569,
                   0.07977825824799212, 0.004225223164514649,
                   78.5706736503258, 0.4189654512234943,
                   1.0286802167038638, 17.70608135753248,
                   0.0029137696769983685, 95.9862079422591,
                   278.9850695233589, 0.02238302676903924,
                   0.021168805718777894, 0.021612134034100134,
                   0.3612157359673094, 0.02687490589647665,
                   0.0021475622437940826, 3.50588547936508,
                   0.9719913647424973, 0.677423408045632,
                   0.009244068359130208, 0.048436703318639834,
                   0.010386810605828679, 0.006799215051154372,
                   25.294185353371063, 0.015597607922489803,
                   0.027189158585780276, 58.920248636080665,
                   0.1406282737754709, 10.671050631918746,
                   1.9360212348909558, 0.12055452708678119,
                   0.037693619310013846, 0.005580116864679647,
                   222.07684644569352, 4.567560526081165,
                   4.569575782838166, 0.002772300106846886,
                   190.81951943758548, 349.56525305456415,
                   0.006445939524327472, 0.009874199994392966,
                   0.022581641934023698, 0.1858803042281388,
                   0.18397574459855714, 0.09893342802620224,
                   0.009259661849238428, 296.2089878854283,
                   2.2397004962121843],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__dual': masked_array(data=[False, False, False, False, True, False, False, True,
                   False, False, False, True, True, False, False, True,
                   True, False, True, False, True, False, True, True,
                   False, True, False, True, True, False, True, False,
                   False, False, False, False, False, True, False, True,
                   True, False, False, False, False, False, True, False,
                   True, False, False, True, True, False, True, False,
                   True, False, False, False, False, True, True, True,
                   True, True, False, True, True, True, False, True,
                   False, True, True, False, False, False, True, False,
                   True, True, False, True, True, False, True, False,
                   False, False, True, True, True, False, True, False,
                   True, False, True, True, True, False, True, True,
                   False, False, True, False, False, True, True, False,
                   False, False, False, True, False, True, False, True,
                   False, True, False, False, False, True, False, True,
                   True, False, False, False, False, True, True, True,
                   False, False, True, False, True, False, False, False,
                   True, False, True, False, True, False, False, True,
                   False, False, True, True, False, False, True, False,
                   False, True, True, False, True, True, False, True,
                   False, False, True, False, True, False, False, True,
                   False, False, False, False, True, True, True, True,
                   False, True, True, False, True, False, True, False,
                   True, False, False, True, False, True, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__fit_intercept': masked_array(data=[True, True, False, True, True, True, False, False,
                   False, True, True, True, False, True, False, True,
                   False, True, False, True, False, True, True, True,
                   True, True, True, True, True, False, False, False,
                   False, True, True, False, True, True, False, False,
                   False, True, False, False, True, False, False, False,
                   False, True, False, True, True, False, False, False,
                   False, False, True, True, True, True, True, False,
                   True, False, True, True, True, False, True, True, True,
                   True, False, False, True, False, False, False, True,
                   False, False, True, True, True, False, True, True,
                   False, False, False, True, True, False, False, False,
                   False, False, False, True, False, True, False, True,
                   False, False, True, False, False, False, True, False,
                   False, False, True, False, False, True, True, False,
                   True, True, True, True, True, False, False, False,
                   True, True, True, False, False, True, True, True,
                   False, False, True, False, True, False, False, False,
                   False, True, True, True, False, False, False, False,
                   False, True, False, True, True, True, False, True,
                   False, True, False, True, False, False, True, True,
                   False, True, True, True, False, False, True, False,
                   False, True, False, False, True, False, False, True,
                   True, True, False, False, False, False, False, True,
                   False, True, True, False, True, True, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__loss': masked_array(data=['squared_hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'hinge', 'hinge', 'squared_hinge',
                   'hinge', 'squared_hinge', 'hinge', 'squared_hinge',
                   'hinge', 'hinge', 'hinge', 'hinge', 'squared_hinge',
                   'hinge', 'hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'hinge',
                   'squared_hinge', 'hinge', 'hinge', 'squared_hinge',
                   'hinge', 'hinge', 'hinge', 'squared_hinge', 'hinge',
                   'hinge', 'hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'hinge', 'hinge', 'hinge',
                   'squared_hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'hinge',
                   'squared_hinge', 'hinge', 'squared_hinge', 'hinge',
                   'squared_hinge', 'squared_hinge', 'hinge', 'hinge',
                   'hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'hinge', 'hinge',
                   'squared_hinge', 'hinge', 'hinge', 'hinge', 'hinge',
                   'squared_hinge', 'hinge', 'hinge', 'squared_hinge',
                   'hinge', 'squared_hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'squared_hinge',
                   'hinge', 'squared_hinge', 'squared_hinge', 'hinge',
                   'hinge', 'hinge', 'hinge', 'squared_hinge', 'hinge',
                   'hinge', 'squared_hinge', 'squared_hinge', 'hinge',
                   'squared_hinge', 'squared_hinge', 'hinge', 'hinge',
                   'hinge', 'hinge', 'hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'hinge', 'hinge', 'squared_hinge',
                   'hinge', 'hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'squared_hinge',
                   'hinge', 'hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'hinge',
                   'squared_hinge', 'hinge', 'squared_hinge', 'hinge',
                   'hinge', 'hinge', 'squared_hinge', 'squared_hinge',
                   'hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'hinge', 'hinge', 'hinge',
                   'squared_hinge', 'hinge', 'hinge', 'hinge',
                   'squared_hinge', 'squared_hinge', 'hinge',
                   'squared_hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'hinge', 'hinge',
                   'hinge', 'hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'squared_hinge', 'hinge', 'hinge',
                   'hinge', 'hinge', 'hinge', 'squared_hinge', 'hinge',
                   'squared_hinge', 'squared_hinge', 'squared_hinge',
                   'hinge', 'hinge', 'squared_hinge', 'squared_hinge',
                   'squared_hinge', 'hinge', 'hinge', 'hinge',
                   'squared_hinge', 'hinge', 'squared_hinge',
                   'squared_hinge', 'hinge', 'squared_hinge', 'hinge',
                   'hinge', 'squared_hinge', 'hinge', 'squared_hinge',
                   'hinge', 'hinge', 'squared_hinge'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__tol': masked_array(data=[4.6309587532287507e-07, 1.0025187710333583e-05,
                   1.7616815407645534e-05, 1.9256240662836352e-07,
                   6.280147153068017e-11, 2.667986625830052e-07,
                   6.106657337736682e-11, 8.79568693589086e-10,
                   1.6599958691675174e-09, 2.1048446684001376e-10,
                   3.5566047061372746e-08, 3.137697492943183e-11,
                   2.4467715524058712e-08, 2.881615944250407e-09,
                   2.5321952010374146e-08, 3.370689496134775e-08,
                   4.775331215379624e-07, 1.0313462404360206e-08,
                   1.649044313549086e-11, 7.642791154185595e-08,
                   6.076617127747328e-10, 8.609590144557659e-11,
                   4.753230187236595e-05, 3.2298955607686916e-05,
                   1.8697476008793414e-10, 1.5800715087260423e-10,
                   7.664126434982118e-08, 1.490326207855403e-10,
                   3.1048145607650802e-09, 2.880860208847905e-06,
                   3.946465100543397e-08, 1.983147717800508e-09,
                   3.813673223190729e-05, 3.629729271952293e-09,
                   9.689938439266985e-11, 1.0720280196222448e-11,
                   1.3415605596307334e-05, 1.2615562282314771e-06,
                   1.762412210616254e-11, 4.114537676427141e-08,
                   5.973743070989194e-06, 6.181842413292706e-06,
                   1.3323812690609542e-08, 2.8550967289106936e-11,
                   6.944093487204946e-05, 6.899318067129255e-10,
                   1.802787280439787e-06, 6.019401012453626e-07,
                   2.2917960676415863e-08, 1.0024481750236628e-08,
                   5.102263174937632e-08, 7.19490260996209e-11,
                   1.843686438360592e-07, 6.881484539181683e-10,
                   7.187661094125923e-10, 5.049915191414868e-09,
                   4.4585507502740535e-07, 7.694466126629636e-07,
                   6.658959314408617e-05, 1.021311071509143e-09,
                   7.1660725269870665e-06, 8.032227843469091e-06,
                   5.052502893882096e-10, 5.669175386436101e-10,
                   2.7024215285199643e-11, 1.722635085177296e-11,
                   1.7640558077252458e-09, 3.2934319477894475e-06,
                   1.5305045599216338e-05, 6.444268324236156e-11,
                   1.1022080184141418e-06, 1.2570065079209307e-10,
                   4.84869865909675e-11, 4.55538174996968e-11,
                   4.1040680743310237e-11, 6.609308884793656e-08,
                   3.1515639033206275e-11, 9.734545267812755e-07,
                   1.9824031963301286e-06, 3.836226619819646e-06,
                   8.94024479031264e-07, 5.733862569667516e-08,
                   2.785838099217736e-06, 4.569752639262453e-08,
                   1.2479341307274428e-06, 3.0032176030042017e-09,
                   7.296895237521522e-09, 1.0094756471086923e-05,
                   1.1323438729050758e-09, 5.079937588925062e-10,
                   1.4231968917443503e-07, 1.28802800208547e-07,
                   9.054782868296409e-05, 9.407172127296378e-11,
                   1.0481064903746388e-11, 1.4187203804610461e-09,
                   1.9196533984093305e-06, 3.289296148170074e-08,
                   9.07796216577302e-09, 5.978134250050811e-08,
                   7.729768853548364e-08, 4.7165422997783794e-11,
                   1.1931208722275984e-10, 1.396054806267457e-09,
                   1.028445753834017e-09, 1.815100708838714e-07,
                   4.430517105900434e-06, 4.2418990293894957e-08,
                   2.5826045998787634e-09, 1.750600189484516e-11,
                   4.796421315516978e-07, 3.51470601373257e-08,
                   5.234124925035556e-06, 2.1325735415238912e-05,
                   5.5458396101210395e-05, 8.364001462203577e-05,
                   2.290773814522801e-09, 8.991599818976465e-10,
                   2.3291430248786164e-09, 1.5780831852829853e-06,
                   7.315201873135304e-10, 1.7502587079696393e-06,
                   2.111843426837603e-10, 5.6437551021474944e-05,
                   1.0732097411560748e-08, 2.6244626798361853e-11,
                   1.0014334807322142e-09, 1.3423323615444628e-05,
                   1.4720248286963207e-08, 4.143367317178569e-10,
                   3.7957244846221466e-05, 6.1168056194946034e-09,
                   1.7120830869781567e-07, 2.8657731152577955e-11,
                   6.6412587809958e-11, 2.6846003267926637e-11,
                   2.6436322420319153e-11, 6.434856309900417e-11,
                   1.1856170764507176e-09, 2.051955220297433e-08,
                   2.1262257839358592e-08, 1.1235329055421025e-08,
                   2.393105304440839e-10, 4.024557721648463e-08,
                   2.8644748510182958e-08, 1.7536195553189233e-06,
                   6.609028238712872e-10, 5.786199214654062e-07,
                   1.046083422677349e-09, 1.2301623561403095e-08,
                   3.0166961849275605e-08, 4.500662970429251e-10,
                   5.406804176133184e-06, 2.6457951284743965e-05,
                   2.5595248303313396e-11, 4.321433817876432e-09,
                   2.0831733347005376e-06, 4.394300120181023e-09,
                   9.79898199400749e-06, 2.569149894685132e-06,
                   1.7797379675934404e-11, 8.167922511384732e-09,
                   1.3752118001222588e-11, 1.2423622141296868e-09,
                   2.182167475328163e-05, 2.844893916882097e-06,
                   3.1880442370228905e-11, 9.458439344625234e-11,
                   2.296106970544342e-09, 1.83733503464512e-07,
                   5.931000945035738e-07, 5.414477811875932e-09,
                   1.420505392422967e-08, 1.0892803718576228e-07,
                   8.14011881984036e-09, 6.780294209670582e-05,
                   4.194220433525286e-08, 7.096766855382044e-07,
                   1.4634989109003937e-10, 1.3206987655706806e-09,
                   3.641232199431587e-08, 4.992121979348074e-05,
                   1.68553608210772e-06, 4.420995503268639e-05,
                   7.805584407746112e-05, 1.1189682868812954e-05,
                   9.674788330455175e-09, 3.332752987284058e-08,
                   6.152326825086275e-05, 1.4211319073353244e-07,
                   3.5200779500358136e-06, 2.5184874330300165e-07,
                   2.366295953920598e-08, 3.572011848923102e-11,
                   3.168791431972503e-06, 2.4919712756736654e-05,
                   4.637046823985104e-05, 7.900630730065066e-09,
                   9.021430076494228e-10, 2.0274404924147546e-05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__max_df': masked_array(data=[0.8111111111111111, 0.5888888888888889,
                   0.5444444444444444, 0.9, 0.7222222222222222,
                   0.7222222222222222, 0.7666666666666666,
                   0.6333333333333333, 0.8555555555555556, 0.5,
                   0.7222222222222222, 0.5888888888888889,
                   0.8111111111111111, 0.8111111111111111,
                   0.8555555555555556, 0.8555555555555556,
                   0.5444444444444444, 0.7666666666666666,
                   0.6333333333333333, 0.8555555555555556,
                   0.7666666666666666, 0.5888888888888889,
                   0.6777777777777778, 0.5888888888888889, 0.5,
                   0.5888888888888889, 0.7666666666666666,
                   0.7222222222222222, 0.7222222222222222,
                   0.7666666666666666, 0.5, 0.6333333333333333,
                   0.8111111111111111, 0.8555555555555556, 0.9, 0.5, 0.9,
                   0.8555555555555556, 0.6333333333333333,
                   0.6777777777777778, 0.6333333333333333, 0.9,
                   0.6333333333333333, 0.7666666666666666,
                   0.7666666666666666, 0.9, 0.8555555555555556,
                   0.5888888888888889, 0.8111111111111111, 0.9,
                   0.8111111111111111, 0.7666666666666666,
                   0.7666666666666666, 0.7222222222222222,
                   0.8555555555555556, 0.5888888888888889,
                   0.7666666666666666, 0.6777777777777778, 0.5,
                   0.8111111111111111, 0.7222222222222222,
                   0.6777777777777778, 0.5888888888888889,
                   0.6777777777777778, 0.7222222222222222,
                   0.7666666666666666, 0.7222222222222222,
                   0.7222222222222222, 0.8111111111111111,
                   0.8555555555555556, 0.9, 0.5888888888888889,
                   0.8555555555555556, 0.5888888888888889,
                   0.8111111111111111, 0.5444444444444444,
                   0.7222222222222222, 0.5888888888888889, 0.5,
                   0.6777777777777778, 0.6333333333333333,
                   0.8555555555555556, 0.5444444444444444,
                   0.6777777777777778, 0.9, 0.5, 0.8111111111111111,
                   0.5444444444444444, 0.5, 0.7222222222222222, 0.5,
                   0.8555555555555556, 0.7222222222222222,
                   0.7666666666666666, 0.6777777777777778,
                   0.8555555555555556, 0.9, 0.6333333333333333,
                   0.8555555555555556, 0.6777777777777778,
                   0.7666666666666666, 0.5444444444444444,
                   0.5888888888888889, 0.6777777777777778, 0.5,
                   0.7222222222222222, 0.6777777777777778,
                   0.6333333333333333, 0.7666666666666666,
                   0.5444444444444444, 0.8555555555555556,
                   0.6333333333333333, 0.6777777777777778,
                   0.6333333333333333, 0.5888888888888889,
                   0.5444444444444444, 0.9, 0.7666666666666666,
                   0.5444444444444444, 0.8111111111111111,
                   0.5444444444444444, 0.5444444444444444,
                   0.5444444444444444, 0.7666666666666666,
                   0.6777777777777778, 0.7666666666666666,
                   0.6777777777777778, 0.5, 0.7666666666666666,
                   0.5888888888888889, 0.6333333333333333,
                   0.6333333333333333, 0.7666666666666666,
                   0.7666666666666666, 0.6333333333333333, 0.5, 0.9,
                   0.5444444444444444, 0.5, 0.7222222222222222,
                   0.5444444444444444, 0.9, 0.6333333333333333,
                   0.6777777777777778, 0.8111111111111111,
                   0.5444444444444444, 0.5, 0.5444444444444444,
                   0.5888888888888889, 0.8555555555555556, 0.9, 0.5,
                   0.7222222222222222, 0.7222222222222222,
                   0.6333333333333333, 0.5, 0.6333333333333333, 0.9,
                   0.5888888888888889, 0.7222222222222222,
                   0.6333333333333333, 0.6333333333333333,
                   0.7222222222222222, 0.5444444444444444,
                   0.6333333333333333, 0.9, 0.7222222222222222,
                   0.5888888888888889, 0.8555555555555556,
                   0.8111111111111111, 0.7666666666666666,
                   0.5888888888888889, 0.6333333333333333,
                   0.6333333333333333, 0.5888888888888889,
                   0.8555555555555556, 0.5888888888888889,
                   0.5444444444444444, 0.6777777777777778,
                   0.5444444444444444, 0.7222222222222222,
                   0.8555555555555556, 0.5444444444444444,
                   0.6777777777777778, 0.7666666666666666,
                   0.6777777777777778, 0.8111111111111111,
                   0.6777777777777778, 0.5888888888888889,
                   0.5444444444444444, 0.5444444444444444,
                   0.6777777777777778, 0.6777777777777778,
                   0.5888888888888889, 0.6333333333333333,
                   0.6333333333333333, 0.7666666666666666, 0.5,
                   0.7666666666666666, 0.5888888888888889],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__min_df': masked_array(data=[0.00010584064670271954, 0.003990504104014076,
                   0.00020372897710426265, 0.0005548391528973029,
                   0.0009967590494856606, 0.00012479450965542044,
                   0.003152365991846556, 0.0006682786012242666,
                   0.005990050296163627, 0.00716092179186374,
                   0.00012475681497800176, 0.0006829945440206446,
                   0.000310357728274008, 0.009581017408827521,
                   0.0002679200688965243, 0.0001549010594968808,
                   0.0003306690777543247, 0.005145980523515436,
                   0.007256481009982383, 0.002049758651290557,
                   0.007608023871113599, 0.003324330236795752,
                   0.002980216977528624, 0.00022254804195374588,
                   0.0008344620946999389, 0.008877280276152191,
                   0.00040451068850042964, 0.00019914576419344536,
                   0.008180791583263703, 0.0010757957031897255,
                   0.0001129740056313636, 0.00020418679606253363,
                   0.0007541963106495653, 0.0019186801744022974,
                   0.0011375577365124346, 0.00010089238031505286,
                   0.008206845772885007, 0.0005645302170572702,
                   0.00019477079051971922, 0.00012939012562096887,
                   0.00021625495147676826, 0.005048591385385536,
                   0.0008442982548093669, 0.0028441143309966966,
                   0.0009319164735426905, 0.0013537725168510032,
                   0.0014828075759756808, 0.0012391547909798965,
                   0.0058116100756694525, 0.0052366676442936085,
                   0.001585257592129777, 0.0006246422909811899,
                   0.0002036628109880303, 0.0011040340297358852,
                   0.0009512472672705787, 0.0004645575710579655,
                   0.0059789975926783055, 0.004818846128715619,
                   0.0015180978458345954, 0.002867472864419668,
                   0.0013043411960312781, 0.0028297488170814285,
                   0.00013048504877353147, 0.0001780576089250437,
                   0.0018453556928409143, 0.0026906561343244943,
                   0.0002735727678374469, 0.0012155407785631475,
                   0.0001839752552740118, 0.007451771946234985,
                   0.0002825805505063378, 0.00012837665529641634,
                   0.0004735448414395373, 0.0014364213766075173,
                   0.0022831681084043015, 0.004955413913883291,
                   0.00011450729388661998, 0.00032069631249092683,
                   0.0077567305331954686, 0.0007577974192126766,
                   0.0018163402959561407, 0.0004193808642302963,
                   0.001933303213760429, 0.0011022266184796128,
                   0.0003855449264155884, 0.004791092914811993,
                   0.0006943086523878995, 0.0002591630519106586,
                   0.0009479235199477638, 0.008440202109367002,
                   0.001380031157108639, 0.005758653609379415,
                   0.00034565068768052935, 0.00031535939957477645,
                   0.004164808062310024, 0.008766758272125403,
                   0.0010545927544104716, 0.00020720905374232786,
                   0.0020406026229870364, 0.0003344403019201508,
                   0.002169212896986129, 0.0002492473223874854,
                   0.00010253450532003541, 0.008444489832730885,
                   0.0008907203221610896, 0.00028732135953084227,
                   0.005894774909892103, 0.00019348501538868124,
                   0.00036192050150989574, 0.00031874827212324775,
                   0.0001980676139464484, 0.001023367476055891,
                   0.00032063643051133476, 0.0018986800918106004,
                   0.00037659592514242634, 0.009381217357705049,
                   0.00015276406893727733, 0.0011792336180804401,
                   0.000271305964499802, 0.0004272815259865897,
                   0.003504031754091589, 0.0020143941074502944,
                   0.0008846672333925147, 0.0011157178298397347,
                   0.004083156864360135, 0.0031398540473429122,
                   0.0021073293777343492, 0.000300260069376049,
                   0.002791062454888747, 0.005150077972579603,
                   0.005860879337325363, 0.0004153471053059371,
                   0.0017113810001817278, 0.002587982978300424,
                   0.00047537426210979066, 0.0003678772797772705,
                   0.0004912412596516514, 0.00037590805775136217,
                   0.00042783085206915295, 0.006543569224063916,
                   0.00011396755477387971, 0.0044560640728379735,
                   0.0008054531266206827, 0.003499658549868154,
                   0.006585407033300364, 0.005411669488569319,
                   0.002397727821659206, 0.0004139459897070357,
                   0.0003481543669197714, 0.0012201331730187994,
                   0.0005921213683276991, 0.0007224987439848304,
                   0.004239405845029294, 0.0001289297513331911,
                   0.0002167735269635653, 0.0007741882071763939,
                   0.008615429070938973, 0.000544083164093137,
                   0.00013413917260143835, 0.001170834386870312,
                   0.000412172568389964, 0.006343457049095708,
                   0.007085668243126212, 0.004419555522889396,
                   0.001125759959268447, 0.003264055244788704,
                   0.0022705524286954822, 0.0025846283476399037,
                   0.005300127181662656, 0.0034069160711413236,
                   0.0018363288887591161, 0.004092492845566458,
                   0.0012519722762086613, 0.0037048731081601874,
                   0.0033699869357803358, 0.0013462868855996064,
                   0.0003375314531660416, 0.0009757029118480949,
                   0.0001970994516098037, 0.004625671127045352,
                   0.001032613594007442, 0.00023250508559087413,
                   0.003981968009453098, 0.0071131878248989625,
                   0.0009641557449293611, 0.001213882910459867,
                   0.0006904718940031613, 0.0009649762199622401,
                   0.00033457677588816844, 0.00022172208569683343,
                   0.0007477093910736796, 0.0010817548990726374,
                   0.00039789641465258865, 0.007577104494145258,
                   0.0020272427074986654, 0.005355505755209849,
                   0.00014156607653749312, 0.00012736964552361243,
                   0.004138901053704424, 0.0065644989941222335],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__ngram_range': masked_array(data=[(1, 1), (1, 1), (1, 2), (1, 2), (1, 2), (1, 1), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 1), (1, 2), (1, 1), (1, 2),
                   (1, 1), (1, 2), (1, 2), (1, 2), (1, 1), (1, 1), (1, 1),
                   (1, 2), (1, 1), (1, 1), (1, 2), (1, 2), (1, 1), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 2), (1, 2), (1, 1), (1, 2),
                   (1, 1), (1, 2), (1, 2), (1, 2), (1, 2), (1, 1), (1, 2),
                   (1, 1), (1, 2), (1, 1), (1, 1), (1, 2), (1, 1), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 2), (1, 2),
                   (1, 2), (1, 2), (1, 2), (1, 1), (1, 2), (1, 2), (1, 1),
                   (1, 2), (1, 2), (1, 1), (1, 2), (1, 1), (1, 2), (1, 1),
                   (1, 2), (1, 2), (1, 2), (1, 1), (1, 1), (1, 2), (1, 2),
                   (1, 2), (1, 1), (1, 1), (1, 2), (1, 2), (1, 2), (1, 2),
                   (1, 2), (1, 2), (1, 1), (1, 1), (1, 2), (1, 1), (1, 2),
                   (1, 2), (1, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1),
                   (1, 2), (1, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 1), (1, 2), (1, 2), (1, 1),
                   (1, 1), (1, 1), (1, 1), (1, 2), (1, 1), (1, 2), (1, 1),
                   (1, 2), (1, 1), (1, 2), (1, 2), (1, 2), (1, 2), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 2), (1, 1),
                   (1, 2), (1, 2), (1, 2), (1, 1), (1, 2), (1, 1), (1, 2),
                   (1, 2), (1, 2), (1, 2), (1, 2), (1, 1), (1, 1), (1, 1),
                   (1, 1), (1, 2), (1, 2), (1, 2), (1, 1), (1, 2), (1, 1),
                   (1, 1), (1, 1), (1, 2), (1, 2), (1, 1), (1, 2), (1, 2),
                   (1, 1), (1, 2), (1, 2), (1, 1), (1, 1), (1, 1), (1, 2),
                   (1, 1), (1, 1), (1, 2), (1, 2), (1, 1), (1, 2), (1, 2),
                   (1, 1), (1, 2), (1, 1), (1, 1), (1, 1), (1, 2), (1, 2),
                   (1, 1), (1, 2), (1, 1), (1, 2), (1, 1), (1, 1), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 2), (1, 1), (1, 2), (1, 2),
                   (1, 2), (1, 1), (1, 1), (1, 1)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__stop_words': masked_array(data=[None, None, 'english', None, None, 'english',
                   'english', None, 'english', None, None, None, None,
                   'english', None, None, 'english', None, None,
                   'english', None, None, 'english', None, 'english',
                   'english', None, 'english', 'english', 'english',
                   'english', 'english', None, 'english', 'english', None,
                   None, None, 'english', 'english', None, 'english',
                   'english', 'english', 'english', None, None, 'english',
                   None, None, None, 'english', 'english', None, None,
                   'english', 'english', 'english', None, None, 'english',
                   None, 'english', 'english', 'english', None, None,
                   None, None, 'english', None, 'english', 'english',
                   'english', None, None, None, None, 'english',
                   'english', None, None, None, 'english', None, None,
                   None, 'english', 'english', None, 'english', None,
                   None, None, None, None, None, 'english', None,
                   'english', 'english', 'english', None, None, None,
                   'english', None, None, 'english', None, 'english',
                   None, 'english', 'english', 'english', 'english',
                   'english', None, None, 'english', 'english', 'english',
                   None, 'english', 'english', 'english', 'english', None,
                   'english', 'english', 'english', 'english', None, None,
                   None, None, None, None, None, None, 'english', None,
                   None, 'english', 'english', 'english', 'english', None,
                   None, None, 'english', None, 'english', None,
                   'english', None, None, None, 'english', 'english',
                   'english', 'english', 'english', 'english', 'english',
                   None, 'english', 'english', None, 'english', 'english',
                   None, 'english', None, None, None, None, None, None,
                   None, None, 'english', 'english', 'english', 'english',
                   'english', 'english', None, None, None, None, None,
                   None, None, 'english', None, 'english', None,
                   'english', None],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__token_pattern': masked_array(data=['\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{1,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}',
                   '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{1,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'clf__C': 0.0033366940119486967, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 4.6309587532287507e-07, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.00010584064670271954, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 750.064482300167, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.0025187710333583e-05, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.003990504104014076, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 910.6727219020366, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 1.7616815407645534e-05, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.00020372897710426265, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.002230597688975375, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.9256240662836352e-07, 'vect__max_df': 0.9, 'vect__min_df': 0.0005548391528973029, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0013276677908624882, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 6.280147153068017e-11, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0009967590494856606, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0627999772170907, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.667986625830052e-07, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00012479450965542044, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 4.9663882828210735, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 6.106657337736682e-11, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.003152365991846556, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.082117773602524, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 8.79568693589086e-10, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0006682786012242666, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 159.5280371906955, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.6599958691675174e-09, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.005990050296163627, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 12.8050221171652, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.1048446684001376e-10, 'vect__max_df': 0.5, 'vect__min_df': 0.00716092179186374, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.8864623907009376, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.5566047061372746e-08, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00012475681497800176, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.005081684197305675, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 3.137697492943183e-11, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0006829945440206446, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 943.8772807525859, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 2.4467715524058712e-08, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.000310357728274008, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 83.2224851560117, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.881615944250407e-09, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.009581017408827521, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 11.911696646732842, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 2.5321952010374146e-08, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0002679200688965243, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.030216667345205644, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.370689496134775e-08, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0001549010594968808, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 4.292234467983982, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 4.775331215379624e-07, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0003306690777543247, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.02299328191471927, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.0313462404360206e-08, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.005145980523515436, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.048629981296000595, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.649044313549086e-11, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.007256481009982383, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.3745836749779732, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 7.642791154185595e-08, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.002049758651290557, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.04182466356766506, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 6.076617127747328e-10, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.007608023871113599, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 283.4852621381364, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 8.609590144557659e-11, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.003324330236795752, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 669.8553088621197, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 4.753230187236595e-05, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.002980216977528624, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.024511847686105825, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 3.2298955607686916e-05, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00022254804195374588, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.4249284366114714, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.8697476008793414e-10, 'vect__max_df': 0.5, 'vect__min_df': 0.0008344620946999389, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.03049840851663483, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.5800715087260423e-10, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.008877280276152191, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 768.0645740168567, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 7.664126434982118e-08, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00040451068850042964, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 52.22401660244008, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.490326207855403e-10, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00019914576419344536, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.11494290142089728, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.1048145607650802e-09, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.008180791583263703, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.020848043324310315, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 2.880860208847905e-06, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0010757957031897255, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.4131405898874502, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 3.946465100543397e-08, 'vect__max_df': 0.5, 'vect__min_df': 0.0001129740056313636, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.32608356222681745, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.983147717800508e-09, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00020418679606253363, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 160.59136435541188, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 3.813673223190729e-05, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0007541963106495653, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.33077753361130346, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.629729271952293e-09, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0019186801744022974, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 19.481557656790713, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 9.689938439266985e-11, 'vect__max_df': 0.9, 'vect__min_df': 0.0011375577365124346, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 33.94976360370441, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.0720280196222448e-11, 'vect__max_df': 0.5, 'vect__min_df': 0.00010089238031505286, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 576.991546117555, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.3415605596307334e-05, 'vect__max_df': 0.9, 'vect__min_df': 0.008206845772885007, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.09743080417977033, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.2615562282314771e-06, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0005645302170572702, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 71.91811241666407, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.762412210616254e-11, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00019477079051971922, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0021522973238422916, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 4.114537676427141e-08, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00012939012562096887, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.004994156946077155, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 5.973743070989194e-06, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00021625495147676826, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.07157457069082429, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 6.181842413292706e-06, 'vect__max_df': 0.9, 'vect__min_df': 0.005048591385385536, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.009781973414431778, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 1.3323812690609542e-08, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0008442982548093669, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 25.992639014984153, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.8550967289106936e-11, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0028441143309966966, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 401.33541700822053, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 6.944093487204946e-05, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0009319164735426905, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 60.63461352181013, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 6.899318067129255e-10, 'vect__max_df': 0.9, 'vect__min_df': 0.0013537725168510032, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 4.329458750584719, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.802787280439787e-06, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0014828075759756808, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.817278958247897, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 6.019401012453626e-07, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0012391547909798965, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 21.682856942663587, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 2.2917960676415863e-08, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0058116100756694525, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.008246702614289652, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.0024481750236628e-08, 'vect__max_df': 0.9, 'vect__min_df': 0.0052366676442936085, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.01045957804333388, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 5.102263174937632e-08, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.001585257592129777, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.001010237003010081, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 7.19490260996209e-11, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0006246422909811899, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 21.541876562402017, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.843686438360592e-07, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0002036628109880303, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 438.82185272227616, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 6.881484539181683e-10, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0011040340297358852, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.03751226652017282, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 7.187661094125923e-10, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0009512472672705787, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 420.81043164157467, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 5.049915191414868e-09, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0004645575710579655, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 9.269749246511369, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 4.4585507502740535e-07, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0059789975926783055, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.060133587411548194, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 7.694466126629636e-07, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.004818846128715619, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 2.9122379280905197, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 6.658959314408617e-05, 'vect__max_df': 0.5, 'vect__min_df': 0.0015180978458345954, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.13898267237265846, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.021311071509143e-09, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.002867472864419668, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 8.05080935096422, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 7.1660725269870665e-06, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0013043411960312781, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 105.05316326635375, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 8.032227843469091e-06, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0028297488170814285, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 507.45669576841016, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 5.052502893882096e-10, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00013048504877353147, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.31868812418975007, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 5.669175386436101e-10, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0001780576089250437, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.0428071180588914, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.7024215285199643e-11, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0018453556928409143, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 15.555510083115763, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 1.722635085177296e-11, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0026906561343244943, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.02048677714588319, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.7640558077252458e-09, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0002735727678374469, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0017786634490937325, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.2934319477894475e-06, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0012155407785631475, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.0437490839744141, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.5305045599216338e-05, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0001839752552740118, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 3.2135254994754887, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 6.444268324236156e-11, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.007451771946234985, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.23443490852434357, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.1022080184141418e-06, 'vect__max_df': 0.9, 'vect__min_df': 0.0002825805505063378, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.021980689912299272, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.2570065079209307e-10, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00012837665529641634, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.12943687048860233, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 4.84869865909675e-11, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0004735448414395373, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0482816854401468, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 4.55538174996968e-11, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0014364213766075173, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 8.14100785513358, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 4.1040680743310237e-11, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0022831681084043015, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 101.67909140744352, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 6.609308884793656e-08, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.004955413913883291, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.03475333544517487, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.1515639033206275e-11, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00011450729388661998, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.020653228062387986, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 9.734545267812755e-07, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00032069631249092683, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 6.911146239912495, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.9824031963301286e-06, 'vect__max_df': 0.5, 'vect__min_df': 0.0077567305331954686, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.016942261000849952, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 3.836226619819646e-06, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0007577974192126766, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.059676367637535414, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 8.94024479031264e-07, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0018163402959561407, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.13070301133122086, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 5.733862569667516e-08, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0004193808642302963, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0029775708023629614, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 2.785838099217736e-06, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.001933303213760429, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 75.14258423768464, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 4.569752639262453e-08, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0011022266184796128, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 405.157444943138, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.2479341307274428e-06, 'vect__max_df': 0.9, 'vect__min_df': 0.0003855449264155884, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.05123756340958192, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.0032176030042017e-09, 'vect__max_df': 0.5, 'vect__min_df': 0.004791092914811993, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 7.225871855687549, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 7.296895237521522e-09, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0006943086523878995, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 68.1120551379025, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.0094756471086923e-05, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0002591630519106586, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.021153065508369383, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.1323438729050758e-09, 'vect__max_df': 0.5, 'vect__min_df': 0.0009479235199477638, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0022480844777595676, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 5.079937588925062e-10, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.008440202109367002, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 357.8875872055519, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.4231968917443503e-07, 'vect__max_df': 0.5, 'vect__min_df': 0.001380031157108639, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 3.9266232730915744, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 1.28802800208547e-07, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.005758653609379415, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 43.07906054455111, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 9.054782868296409e-05, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00034565068768052935, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 47.361382334031354, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 9.407172127296378e-11, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00031535939957477645, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0019522209917688003, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.0481064903746388e-11, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.004164808062310024, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 12.548279641729332, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.4187203804610461e-09, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.008766758272125403, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.01554423091419384, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.9196533984093305e-06, 'vect__max_df': 0.9, 'vect__min_df': 0.0010545927544104716, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 58.849845879262716, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 3.289296148170074e-08, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00020720905374232786, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 204.64478899433468, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 9.07796216577302e-09, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0020406026229870364, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 506.65312695414104, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 5.978134250050811e-08, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0003344403019201508, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 79.86818695044435, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 7.729768853548364e-08, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.002169212896986129, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.43971573628117455, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 4.7165422997783794e-11, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0002492473223874854, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 3.8275309208861046, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.1931208722275984e-10, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00010253450532003541, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.00598223181338227, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 1.396054806267457e-09, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.008444489832730885, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 64.35418263289, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.028445753834017e-09, 'vect__max_df': 0.5, 'vect__min_df': 0.0008907203221610896, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.00804914109305218, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.815100708838714e-07, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00028732135953084227, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.027374476536659, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 4.430517105900434e-06, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.005894774909892103, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 240.9896603186165, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 4.2418990293894957e-08, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00019348501538868124, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 123.3767107473311, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 2.5826045998787634e-09, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00036192050150989574, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 18.998966522218097, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.750600189484516e-11, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.00031874827212324775, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.10293505661591996, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 4.796421315516978e-07, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0001980676139464484, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 250.53059232022224, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.51470601373257e-08, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.001023367476055891, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.12924584165635786, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 5.234124925035556e-06, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00032063643051133476, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 57.83805520202766, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 2.1325735415238912e-05, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0018986800918106004, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 36.26173544498667, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 5.5458396101210395e-05, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00037659592514242634, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 40.86034218929553, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 8.364001462203577e-05, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.009381217357705049, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 22.6218129979559, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 2.290773814522801e-09, 'vect__max_df': 0.9, 'vect__min_df': 0.00015276406893727733, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.3470306518683304, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 8.991599818976465e-10, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0011792336180804401, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0010606590252788082, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.3291430248786164e-09, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.000271305964499802, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 112.46592014451117, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.5780831852829853e-06, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0004272815259865897, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 31.756700742474475, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 7.315201873135304e-10, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.003504031754091589, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.5307459420240473, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.7502587079696393e-06, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0020143941074502944, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 2.527002613368308, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.111843426837603e-10, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0008846672333925147, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.5337618944245031, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 5.6437551021474944e-05, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0011157178298397347, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 28.645695712016185, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.0732097411560748e-08, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.004083156864360135, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 431.16337081463644, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.6244626798361853e-11, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0031398540473429122, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.10299760764726297, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.0014334807322142e-09, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0021073293777343492, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 13.31869257817897, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.3423323615444628e-05, 'vect__max_df': 0.5, 'vect__min_df': 0.000300260069376049, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.5452868555939986, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.4720248286963207e-08, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.002791062454888747, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.225994430551375, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 4.143367317178569e-10, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.005150077972579603, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.03810201865822455, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.7957244846221466e-05, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.005860879337325363, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.001589382518765842, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 6.1168056194946034e-09, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0004153471053059371, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 83.44292553405582, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.7120830869781567e-07, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0017113810001817278, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 21.257056548888908, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.8657731152577955e-11, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.002587982978300424, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 271.07949259424885, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 6.6412587809958e-11, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00047537426210979066, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 46.586305948325275, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.6846003267926637e-11, 'vect__max_df': 0.5, 'vect__min_df': 0.0003678772797772705, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.2228173663389144, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 2.6436322420319153e-11, 'vect__max_df': 0.9, 'vect__min_df': 0.0004912412596516514, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 21.516923822986012, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 6.434856309900417e-11, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.00037590805775136217, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.12310936202739714, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.1856170764507176e-09, 'vect__max_df': 0.5, 'vect__min_df': 0.00042783085206915295, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.11053086156950301, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.051955220297433e-08, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.006543569224063916, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.17145034053108255, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.1262257839358592e-08, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.00011396755477387971, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.168318418051294, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.1235329055421025e-08, 'vect__max_df': 0.9, 'vect__min_df': 0.0044560640728379735, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 4.955782682935226, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.393105304440839e-10, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0008054531266206827, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.04466314608300656, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 4.024557721648463e-08, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.003499658549868154, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.7537491331977475, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.8644748510182958e-08, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.006585407033300364, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.4432925192781936, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.7536195553189233e-06, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.005411669488569319, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 2.939341814740996, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 6.609028238712872e-10, 'vect__max_df': 0.5, 'vect__min_df': 0.002397727821659206, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 4.5930733276189555, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 5.786199214654062e-07, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0004139459897070357, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 288.4125855014936, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 1.046083422677349e-09, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0003481543669197714, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.03325280185523374, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.2301623561403095e-08, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0012201331730187994, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 395.93474978706, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 3.0166961849275605e-08, 'vect__max_df': 0.9, 'vect__min_df': 0.0005921213683276991, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 237.08500831910283, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 4.500662970429251e-10, 'vect__max_df': 0.5, 'vect__min_df': 0.0007224987439848304, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.004888610123406569, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 5.406804176133184e-06, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.004239405845029294, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.07977825824799212, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.6457951284743965e-05, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0001289297513331911, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.004225223164514649, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 2.5595248303313396e-11, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0002167735269635653, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 78.5706736503258, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 4.321433817876432e-09, 'vect__max_df': 0.5, 'vect__min_df': 0.0007741882071763939, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.4189654512234943, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.0831733347005376e-06, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.008615429070938973, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.0286802167038638, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 4.394300120181023e-09, 'vect__max_df': 0.9, 'vect__min_df': 0.000544083164093137, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 17.70608135753248, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 9.79898199400749e-06, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00013413917260143835, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0029137696769983685, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.569149894685132e-06, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.001170834386870312, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 95.9862079422591, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.7797379675934404e-11, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.000412172568389964, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 278.9850695233589, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 8.167922511384732e-09, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.006343457049095708, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.02238302676903924, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.3752118001222588e-11, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.007085668243126212, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.021168805718777894, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.2423622141296868e-09, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.004419555522889396, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.021612134034100134, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 2.182167475328163e-05, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.001125759959268447, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.3612157359673094, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.844893916882097e-06, 'vect__max_df': 0.9, 'vect__min_df': 0.003264055244788704, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.02687490589647665, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 3.1880442370228905e-11, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0022705524286954822, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0021475622437940826, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 9.458439344625234e-11, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0025846283476399037, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 3.50588547936508, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 2.296106970544342e-09, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.005300127181662656, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.9719913647424973, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.83733503464512e-07, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0034069160711413236, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.677423408045632, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 5.931000945035738e-07, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0018363288887591161, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.009244068359130208, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 5.414477811875932e-09, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.004092492845566458, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.048436703318639834, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.420505392422967e-08, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0012519722762086613, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.010386810605828679, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 1.0892803718576228e-07, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0037048731081601874, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.006799215051154372, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 8.14011881984036e-09, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0033699869357803358, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 25.294185353371063, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 6.780294209670582e-05, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0013462868855996064, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.015597607922489803, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 4.194220433525286e-08, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0003375314531660416, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.027189158585780276, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 7.096766855382044e-07, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0009757029118480949, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 58.920248636080665, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.4634989109003937e-10, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0001970994516098037, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.1406282737754709, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 1.3206987655706806e-09, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.004625671127045352, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 10.671050631918746, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 3.641232199431587e-08, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.001032613594007442, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.9360212348909558, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 4.992121979348074e-05, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.00023250508559087413, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.12055452708678119, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 1.68553608210772e-06, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.003981968009453098, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.037693619310013846, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 4.420995503268639e-05, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0071131878248989625, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.005580116864679647, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 7.805584407746112e-05, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0009641557449293611, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 222.07684644569352, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 1.1189682868812954e-05, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.001213882910459867, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 4.567560526081165, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 9.674788330455175e-09, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0006904718940031613, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 4.569575782838166, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 3.332752987284058e-08, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0009649762199622401, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.002772300106846886, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 6.152326825086275e-05, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00033457677588816844, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 190.81951943758548, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 1.4211319073353244e-07, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.00022172208569683343, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 349.56525305456415, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 3.5200779500358136e-06, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0007477093910736796, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.006445939524327472, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 2.5184874330300165e-07, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0010817548990726374, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.009874199994392966, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 2.366295953920598e-08, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00039789641465258865, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.022581641934023698, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'hinge', 'clf__tol': 3.572011848923102e-11, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.007577104494145258, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.1858803042281388, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 3.168791431972503e-06, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0020272427074986654, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.18397574459855714, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 2.4919712756736654e-05, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.005355505755209849, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.09893342802620224, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__loss': 'squared_hinge', 'clf__tol': 4.637046823985104e-05, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00014156607653749312, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.009259661849238428, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 7.900630730065066e-09, 'vect__max_df': 0.5, 'vect__min_df': 0.00012736964552361243, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 296.2089878854283, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'hinge', 'clf__tol': 9.021430076494228e-10, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.004138901053704424, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 2.2397004962121843, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__loss': 'squared_hinge', 'clf__tol': 2.0274404924147546e-05, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0065644989941222335, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}], 'split0_test_score': array([0.62129916, 0.58241273, 0.75740168, 0.58550597, 0.57534247,
       0.7308882 , 0.63853292, 0.72735307,        nan, 0.55943438,
       0.74768007, 0.7207247 , 0.70481662, 0.49270879,        nan,
       0.7105612 , 0.74591251, 0.64295183, 0.5987627 ,        nan,
       0.58285462,        nan, 0.59434379, 0.72116659,        nan,
       0.61157755, 0.69642068, 0.75386655, 0.63234644,        nan,
       0.74591251,        nan,        nan, 0.70879364,        nan,
              nan,        nan, 0.73000442,        nan, 0.63985859,
       0.64516129,        nan, 0.68625718, 0.61643836,        nan,
              nan, 0.69642068, 0.69597879, 0.59522757, 0.6190897 ,
       0.65134777, 0.62571807, 0.70437472, 0.66416262, 0.64825453,
       0.71674768, 0.59611136, 0.67211666, 0.69907203,        nan,
              nan, 0.65002209, 0.70967742, 0.76226248, 0.70614229,
       0.62704375, 0.69730446, 0.60583297, 0.75430844, 0.61555457,
              nan, 0.72116659,        nan, 0.69907203, 0.65178966,
              nan, 0.71718957,        nan, 0.59655325, 0.70304905,
       0.69642068, 0.74016792,        nan, 0.67962881, 0.72646929,
       0.66902342, 0.69951392, 0.70702607, 0.69686257, 0.54485197,
       0.66062749, 0.62129916, 0.73486522,        nan, 0.58992488,
              nan, 0.62836942, 0.71763146, 0.6699072 , 0.7260274 ,
       0.62085727, 0.74591251, 0.73133009, 0.57666814, 0.70172338,
              nan, 0.65709236,        nan,        nan, 0.74944764,
       0.71232877, 0.6597437 , 0.73707468,        nan, 0.69951392,
       0.50066284,        nan, 0.72558551, 0.61069377, 0.71895714,
              nan, 0.70702607, 0.71409633, 0.72205038, 0.59566947,
       0.5987627 ,        nan, 0.70702607, 0.69067609, 0.63632346,
       0.65355722, 0.65002209,        nan, 0.66195316, 0.72381794,
       0.7308882 ,        nan,        nan, 0.70083959, 0.65665046,
       0.75254087,        nan, 0.7260274 , 0.68360583, 0.63720725,
              nan, 0.66769775,        nan, 0.72514361,        nan,
              nan, 0.67697746, 0.63367212, 0.73353955, 0.72779496,
       0.68139638, 0.6292532 , 0.74149359, 0.71188688, 0.65930181,
              nan, 0.53380468, 0.61864781,        nan, 0.70304905,
       0.69376933, 0.68714096, 0.63676536,        nan,        nan,
       0.70835175,        nan, 0.70393283, 0.6345559 ,        nan,
       0.65576668, 0.68493151, 0.69907203,        nan,        nan,
       0.71542201, 0.74723818, 0.6853734 , 0.60760053,        nan,
       0.67211666, 0.69774635,        nan, 0.60229783, 0.7105612 ,
       0.67697746, 0.64737075, 0.72956253,        nan, 0.71232877,
       0.64339373, 0.74414494, 0.72381794,        nan, 0.61290323]), 'split1_test_score': array([0.60760053, 0.59213433, 0.74900574, 0.57976138, 0.5735749 ,
       0.71939903, 0.65046399, 0.72823685,        nan, 0.5634114 ,
       0.74458683, 0.7057004 , 0.70216527, 0.50287229,        nan,
       0.6955369 , 0.73795846, 0.63367212, 0.58683164,        nan,
       0.57666814,        nan, 0.59655325, 0.71011931,        nan,
       0.59699514, 0.69421122, 0.75209898, 0.61511268,        nan,
       0.74547061,        nan,        nan, 0.70083959,        nan,
              nan,        nan, 0.71718957,        nan, 0.63676536,
       0.63543968,        nan, 0.67388422, 0.6296951 ,        nan,
              nan, 0.7057004 , 0.7057004 , 0.5987627 , 0.60008838,
       0.63588157, 0.61334512, 0.71277066, 0.6699072 , 0.63190455,
       0.71984092, 0.59964649, 0.65576668, 0.70481662,        nan,
              nan, 0.64913831, 0.71763146, 0.74900574, 0.70128148,
       0.64339373, 0.68493151, 0.59257623, 0.75607601, 0.60715864,
              nan, 0.70216527,        nan, 0.68448962, 0.66769775,
              nan, 0.70393283,        nan, 0.58815731, 0.6853734 ,
       0.68360583, 0.72425983,        nan, 0.68228016, 0.73177198,
       0.6548829 , 0.69951392, 0.71144498, 0.68714096, 0.52496686,
       0.67167477, 0.62704375, 0.73795846,        nan, 0.56517897,
              nan, 0.61290323, 0.71939903, 0.67697746, 0.7207247 ,
       0.63367212, 0.73751657, 0.73177198, 0.56120194, 0.70923553,
              nan, 0.64030049,        nan,        nan, 0.75033142,
       0.7003977 , 0.66637207, 0.72912064,        nan, 0.70349094,
       0.51878038,        nan, 0.72381794, 0.59566947, 0.71409633,
              nan, 0.69818825, 0.71718957, 0.71939903, 0.60980999,
       0.61246133,        nan, 0.71630579, 0.6800707 , 0.63411401,
       0.63013699, 0.63190455,        nan, 0.67697746, 0.72646929,
       0.7361909 ,        nan,        nan, 0.68448962, 0.64516129,
       0.74193548,        nan, 0.72735307, 0.66062749, 0.63102077,
              nan, 0.6699072 ,        nan, 0.73353955,        nan,
              nan, 0.68493151, 0.6142289 , 0.72028281, 0.71188688,
       0.68669907, 0.6195316 , 0.74370305, 0.72867875, 0.64295183,
              nan, 0.53601414, 0.60848431,        nan, 0.68802475,
       0.68625718, 0.67034909, 0.62350862,        nan,        nan,
       0.7105612 ,        nan, 0.6853734 , 0.62041538,        nan,
       0.67079099, 0.6699072 , 0.68714096,        nan,        nan,
       0.71895714, 0.74149359, 0.66681396, 0.59346001,        nan,
       0.68139638, 0.70879364,        nan, 0.59522757, 0.7105612 ,
       0.68448962, 0.63676536, 0.71984092,        nan, 0.69995581,
       0.64074238, 0.73044631, 0.71453822,        nan, 0.61732214]), 'split2_test_score': array([0.62836942, 0.60185594, 0.76314627, 0.59611136, 0.59611136,
       0.74193548, 0.66195316, 0.72867875,        nan, 0.57269112,
       0.75430844, 0.7260274 , 0.7003977 , 0.51612903,        nan,
       0.71718957, 0.75077331, 0.65267344, 0.5987627 ,        nan,
       0.59434379,        nan, 0.61157755, 0.72823685,        nan,
       0.6195316 , 0.69774635, 0.75872735, 0.63764914,        nan,
       0.76049492,        nan,        nan, 0.71188688,        nan,
              nan,        nan, 0.73884224,        nan, 0.65311533,
       0.65223155,        nan, 0.69465312, 0.64737075,        nan,
              nan, 0.70790985, 0.7105612 , 0.60141405, 0.61820592,
       0.65311533, 0.63499779, 0.71895714, 0.67653557, 0.64913831,
       0.72956253, 0.6093681 , 0.66637207, 0.70393283,        nan,
              nan, 0.65709236, 0.71807335, 0.76447194, 0.70216527,
       0.65709236, 0.7057004 , 0.61378701, 0.76712329, 0.62306673,
              nan, 0.72912064,        nan, 0.69509501, 0.67300044,
              nan, 0.72205038,        nan, 0.60141405, 0.7105612 ,
       0.69818825, 0.73840035,        nan, 0.69686257, 0.74060981,
       0.67123288, 0.71232877, 0.71365444, 0.71718957, 0.54352629,
       0.68051259, 0.63057888, 0.74458683,        nan, 0.5885992 ,
              nan, 0.62881131, 0.71542201, 0.67962881, 0.73221388,
       0.64295183, 0.75430844, 0.74370305, 0.5788776 , 0.7207247 ,
              nan, 0.65223155,        nan,        nan, 0.75298277,
       0.71851525, 0.67079099, 0.74812196,        nan, 0.70437472,
       0.53424658,        nan, 0.72867875, 0.62218294, 0.7361909 ,
              nan, 0.7105612 , 0.73000442, 0.73486522, 0.62218294,
       0.63411401,        nan, 0.71763146, 0.69774635, 0.64737075,
       0.65709236, 0.65178966,        nan, 0.68669907, 0.73884224,
       0.74591251,        nan,        nan, 0.70746796, 0.66548829,
       0.7565179 ,        nan, 0.73221388, 0.68139638, 0.64339373,
              nan, 0.68316394,        nan, 0.7463544 ,        nan,
              nan, 0.69155988, 0.63499779, 0.7410517 , 0.73309766,
       0.69067609, 0.63411401, 0.74768007, 0.72425983, 0.65885992,
              nan, 0.55413168, 0.61599646,        nan, 0.69907203,
       0.70304905, 0.69951392, 0.64162616,        nan,        nan,
       0.71763146,        nan, 0.70393283, 0.62704375,        nan,
       0.67697746, 0.67962881, 0.70393283,        nan,        nan,
       0.71851525, 0.76270437, 0.6853734 , 0.61555457,        nan,
       0.69421122, 0.71453822,        nan, 0.61511268, 0.71011931,
       0.6853734 , 0.64913831, 0.73663279,        nan, 0.71365444,
       0.65885992, 0.74944764, 0.7308882 ,        nan, 0.62129916]), 'split3_test_score': array([0.63809103, 0.6142289 , 0.75695979, 0.60097216, 0.60273973,
       0.7410517 , 0.65709236, 0.73133009,        nan, 0.56915599,
       0.7565179 , 0.72249227, 0.70349094, 0.49049934,        nan,
       0.70967742, 0.75254087, 0.65046399, 0.6040654 ,        nan,
       0.59257623,        nan, 0.61776403, 0.73574901,        nan,
       0.62129916, 0.70393283, 0.75784357, 0.63632346,        nan,
       0.75828546,        nan,        nan, 0.7158639 ,        nan,
              nan,        nan, 0.73884224,        nan, 0.6495802 ,
       0.65930181,        nan, 0.69421122, 0.63632346,        nan,
              nan, 0.69951392, 0.71321255, 0.5987627 , 0.62615996,
       0.65620857, 0.63853292, 0.71718957, 0.67741935, 0.65178966,
       0.72691118, 0.59611136, 0.66681396, 0.70083959,        nan,
              nan, 0.64516129, 0.72028281, 0.76049492, 0.71011931,
       0.64648696, 0.70260716, 0.61290323, 0.75961114, 0.61688025,
              nan, 0.72293416,        nan, 0.70349094, 0.66327883,
              nan, 0.71851525,        nan, 0.58992488, 0.70304905,
       0.69509501, 0.72867875,        nan, 0.69376933, 0.73574901,
       0.66858153, 0.71144498, 0.70835175, 0.70702607, 0.54706142,
       0.67962881, 0.61776403, 0.7361909 ,        nan, 0.60008838,
              nan, 0.63057888, 0.72956253, 0.68625718, 0.7308882 ,
       0.63367212, 0.75254087, 0.74281927, 0.5788776 , 0.71011931,
              nan, 0.65444101,        nan,        nan, 0.74016792,
       0.72867875, 0.67344233, 0.74414494,        nan, 0.7105612 ,
       0.51171012,        nan, 0.72691118, 0.62129916, 0.73177198,
              nan, 0.71807335, 0.72249227, 0.73663279, 0.61732214,
       0.62262483,        nan, 0.71674768, 0.69067609, 0.6447194 ,
       0.65841803, 0.66018559,        nan, 0.67034909, 0.72514361,
       0.73398144,        nan,        nan, 0.71718957, 0.65709236,
       0.74944764,        nan, 0.72293416, 0.67786125, 0.63985859,
              nan, 0.67786125,        nan, 0.73133009,        nan,
              nan, 0.68669907, 0.64030049, 0.73177198, 0.7361909 ,
       0.69288555, 0.62881131, 0.74679629, 0.72646929, 0.66151127,
              nan, 0.54661953, 0.62218294,        nan, 0.70393283,
       0.69995581, 0.69155988, 0.63897481,        nan,        nan,
       0.72160848,        nan, 0.70658418, 0.63720725,        nan,
       0.67034909, 0.68625718, 0.70304905,        nan,        nan,
       0.71321255, 0.76314627, 0.68360583, 0.61246133,        nan,
       0.6902342 , 0.71188688,        nan, 0.6142289 , 0.71232877,
       0.68316394, 0.65178966, 0.73707468,        nan, 0.72028281,
       0.65134777, 0.74502872, 0.74016792,        nan, 0.62748564]), 'split4_test_score': array([0.6290893 , 0.58001768, 0.75729443, 0.58841733, 0.58974359,
       0.73695844, 0.65694076, 0.7351901 ,        nan, 0.56587091,
       0.76392573, 0.71220159, 0.70557029, 0.51193634,        nan,
       0.70291777, 0.75375774, 0.63660477, 0.59681698,        nan,
       0.58178603,        nan, 0.60963749, 0.71662246,        nan,
       0.62157383, 0.70247569, 0.75464191, 0.62953139,        nan,
       0.7648099 ,        nan,        nan, 0.71308576,        nan,
              nan,        nan, 0.7316534 ,        nan, 0.64986737,
       0.64942529,        nan, 0.68169761, 0.63881521,        nan,
              nan, 0.70335986, 0.71485411, 0.58443855, 0.61450044,
       0.65428824, 0.62732095, 0.72413793, 0.67904509, 0.6489832 ,
       0.72281167, 0.5928382 , 0.66622458, 0.70468612,        nan,
              nan, 0.6423519 , 0.72236958, 0.7581786 , 0.71662246,
       0.64058355, 0.69363395, 0.60433245, 0.76702034, 0.61229001,
              nan, 0.71618037,        nan, 0.688771  , 0.66578249,
              nan, 0.71308576,        nan, 0.58841733, 0.69407604,
       0.68700265, 0.73121132,        nan, 0.69717065, 0.70645447,
       0.66799293, 0.70601238, 0.71396994, 0.70335986, 0.54420866,
       0.67727675, 0.61405836, 0.73784262,        nan, 0.59106985,
              nan, 0.63262599, 0.7285588 , 0.66489832, 0.73032714,
       0.62997347, 0.7617153 , 0.75022104, 0.58311229, 0.71618037,
              nan, 0.64854111,        nan,        nan, 0.74447392,
       0.71750663, 0.68125553, 0.74535809,        nan, 0.71087533,
       0.5331565 ,        nan, 0.72325376, 0.60698497, 0.72944297,
              nan, 0.71618037, 0.72104332, 0.74093722, 0.6061008 ,
       0.61361627,        nan, 0.72369584, 0.68611848, 0.63969938,
       0.64323607, 0.64412025,        nan, 0.66710875, 0.72988506,
       0.7382847 ,        nan,        nan, 0.69319187, 0.65517241,
       0.755084  ,        nan, 0.72679045, 0.67860301, 0.63085765,
              nan, 0.67683466,        nan, 0.73563218,        nan,
              nan, 0.69053935, 0.63748895, 0.73032714, 0.71706454,
       0.69407604, 0.63660477, 0.74933687, 0.73121132, 0.66489832,
              nan, 0.52387268, 0.60433245,        nan, 0.69451813,
       0.688771  , 0.68302387, 0.62776304,        nan,        nan,
       0.71794872,        nan, 0.69274978, 0.62997347,        nan,
       0.6755084 , 0.68479222, 0.69893899,        nan,        nan,
       0.7152962 , 0.76790451, 0.6821397 , 0.60389036,        nan,
       0.69496021, 0.71883289,        nan, 0.61715296, 0.71662246,
       0.68788683, 0.65075155, 0.72679045,        nan, 0.71750663,
       0.64102564, 0.74624226, 0.71971706,        nan, 0.61007958]), 'mean_test_score': array([0.62488989, 0.59412992, 0.75676158, 0.59015364, 0.58750241,
       0.73404657, 0.65299664, 0.73015777,        nan, 0.56611276,
       0.75340379, 0.71742927, 0.70328816, 0.50282916,        nan,
       0.70717657, 0.74818858, 0.64327323, 0.59704788,        nan,
       0.58564576,        nan, 0.60597522, 0.72237884,        nan,
       0.61419546, 0.69895736, 0.75543567, 0.63019262,        nan,
       0.75499468,        nan,        nan, 0.71009395,        nan,
              nan,        nan, 0.73130638,        nan, 0.64583737,
       0.64831192,        nan, 0.68614067, 0.63372857,        nan,
              nan, 0.70258094, 0.70806141, 0.59572112, 0.61560888,
       0.6501683 , 0.62798297, 0.715486  , 0.67341397, 0.64601405,
       0.7231748 , 0.5988151 , 0.66545879, 0.70266944,        nan,
              nan, 0.64875319, 0.71760693, 0.75888274, 0.70726616,
       0.64292007, 0.6968355 , 0.60588637, 0.76082784, 0.61499004,
              nan, 0.71831341,        nan, 0.69418372, 0.66430983,
              nan, 0.71495476,        nan, 0.59289336, 0.69922175,
       0.69206248, 0.73254363,        nan, 0.6899423 , 0.72821091,
       0.66634273, 0.70576279, 0.71088944, 0.70231581, 0.54092304,
       0.67394408, 0.62214883, 0.73828881,        nan, 0.58697226,
              nan, 0.62665777, 0.72211476, 0.6755338 , 0.72803626,
       0.63222536, 0.75039874, 0.73996909, 0.57574751, 0.71159666,
              nan, 0.6505213 ,        nan,        nan, 0.74748073,
       0.71548542, 0.67032092, 0.74076406,        nan, 0.70576322,
       0.51971128,        nan, 0.72564943, 0.61136606, 0.72609186,
              nan, 0.71000585, 0.72096518, 0.73077693, 0.61021707,
       0.61631583,        nan, 0.71628137, 0.68905754, 0.6404454 ,
       0.64848813, 0.64760443,        nan, 0.67261751, 0.72883163,
       0.73705155,        nan,        nan, 0.70063572, 0.65591296,
       0.75110518,        nan, 0.72706379, 0.67641879, 0.6364676 ,
              nan, 0.67509296,        nan, 0.73439997,        nan,
              nan, 0.68614145, 0.63213765, 0.73139464, 0.72520699,
       0.68914663, 0.62966298, 0.74580197, 0.72450121, 0.65750463,
              nan, 0.53888854, 0.6139288 ,        nan, 0.69771936,
       0.69436047, 0.68631755, 0.6337276 ,        nan,        nan,
       0.71522032,        nan, 0.6985146 , 0.62983915,        nan,
       0.66987852, 0.68110338, 0.69842677,        nan,        nan,
       0.71628063, 0.75649738, 0.68066126, 0.60659336,        nan,
       0.68658373, 0.7103596 ,        nan, 0.60880399, 0.71203859,
       0.68357825, 0.64716312, 0.72998027,        nan, 0.71274569,
       0.64707389, 0.74306197, 0.72582587,        nan, 0.61781795]), 'std_test_score': array([0.01015704, 0.01268141, 0.00450888, 0.00755181, 0.01142937,
       0.00829833, 0.0081014 , 0.00284403,        nan, 0.00457149,
       0.00680775, 0.00742047, 0.00185478, 0.01014175,        nan,
       0.00737007, 0.00577018, 0.00744075, 0.00564892,        nan,
       0.00673755,        nan, 0.00903148, 0.00892165,        nan,
       0.00933897, 0.0036759 , 0.0024843 , 0.00807053,        nan,
       0.0078818 ,        nan,        nan, 0.00515348,        nan,
              nan,        nan, 0.0079332 ,        nan, 0.00634454,
       0.00791204,        nan, 0.00784309, 0.0103338 ,        nan,
              nan, 0.00414947, 0.00678952, 0.00597414, 0.00862903,
       0.00731636, 0.00872174, 0.0066429 , 0.00557462, 0.00715587,
       0.00463288, 0.00569914, 0.00532017, 0.00230492,        nan,
              nan, 0.00500357, 0.00431135, 0.00535372, 0.00563523,
       0.00970894, 0.00726737, 0.00763196, 0.00537666, 0.00524872,
              nan, 0.00907304,        nan, 0.00685016, 0.00702839,
              nan, 0.00621281,        nan, 0.00523973, 0.00867335,
       0.0057067 , 0.00596263,        nan, 0.00748147, 0.01182889,
       0.00583374, 0.00554181, 0.00278599, 0.01004509, 0.00806583,
       0.00733553, 0.00600716, 0.00334949,        nan, 0.01162012,
              nan, 0.00703917, 0.0058183 , 0.0074648 , 0.00420306,
       0.00712107, 0.00817332, 0.00733476, 0.00756645, 0.00647411,
              nan, 0.00582845,        nan,        nan, 0.0045779 ,
       0.00921881, 0.00716939, 0.00686812,        nan, 0.00436576,
       0.01280451,        nan, 0.00199331, 0.0098153 , 0.00824962,
              nan, 0.00710004, 0.00539411, 0.00848347, 0.00919137,
       0.01172037,        nan, 0.00534183, 0.00583329, 0.00497717,
       0.0106083 , 0.00938374,        nan, 0.00856178, 0.00539706,
       0.00506341,        nan,        nan, 0.01128591, 0.00647717,
       0.00517727,        nan, 0.00299365, 0.00815655, 0.00492253,
              nan, 0.00561104,        nan, 0.00693212,        nan,
              nan, 0.00518564, 0.00923609, 0.00667254, 0.00930947,
       0.00461898, 0.00585728, 0.00282769, 0.00671611, 0.0075838 ,
              nan, 0.01050434, 0.00657887,        nan, 0.00588347,
       0.00638834, 0.0096762 , 0.00691595,        nan,        nan,
       0.00495885,        nan, 0.00812105, 0.00588517,        nan,
       0.00751383, 0.00603908, 0.0059955 ,        nan,        nan,
       0.00215762, 0.01023429, 0.00702869, 0.0076882 ,        nan,
       0.00869339, 0.00711528,        nan, 0.00855083, 0.00241433,
       0.00364305, 0.00540998, 0.00644581,        nan, 0.00698649,
       0.00703405, 0.00655876, 0.00894519,        nan, 0.00616224]), 'rank_test_score': array([121, 138,   3, 140, 141,  19,  97,  24, 167, 145,   7,  41,  60,
       149, 165,  57,  10, 108, 136, 163, 143, 160, 133,  36, 159, 127,
        66,   5, 116, 153,   6, 152, 150,  53, 154, 161, 171,  22, 198,
       107, 102, 197,  80, 112, 170, 193,  62,  55, 137, 125,  99, 119,
        44,  88, 106,  35, 135,  93,  61, 192, 191, 100,  40,   2,  56,
       109,  70, 134,   1, 126, 189,  39, 186,  72,  94, 184,  47, 182,
       139,  65,  73,  20, 181,  74,  27,  92,  59,  51,  63, 146,  87,
       122,  16, 178, 142, 175, 120,  37,  85,  28, 114,   9,  15, 144,
        50, 172,  98, 156, 196,  11,  45,  90,  14, 179,  58, 148, 168,
        32, 129,  30, 194,  54,  38,  23, 130, 124, 190,  42,  76, 110,
       101, 103, 173,  89,  26,  17, 176, 177,  64,  96,   8, 180,  29,
        84, 111, 183,  86, 185,  18, 187, 188,  79, 115,  21,  33,  75,
       118,  12,  34,  95, 200, 147, 128, 195,  69,  71,  78, 113, 199,
       169,  46, 151,  67, 117, 155,  91,  82,  68, 157, 158,  43,   4,
        83, 132, 162,  77,  52, 164, 131,  49,  81, 104,  25, 166,  48,
       105,  13,  31, 174, 123], dtype=int32)}