Mean validation score: 0.7640976802465215
std: 0.00558089460593491
Parameters: {'clf__C': 0.03347329857709512, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5790356826861355, 'clf__max_iter': 57, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 1.2982284932575753e-11, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00010489404472121024, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}
accruracy = 0.6860063728093467

{'clf__C': 0.03347329857709512, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5790356826861355, 'clf__max_iter': 57, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 1.2982284932575753e-11, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00010489404472121024, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}

{'mean_fit_time': array([1.21520748e+00, 8.66120524e+00, 8.21372089e+00, 1.05477064e+01,
       1.00272202e+01, 9.56652303e+00, 2.42817922e+00, 8.80359092e+00,
       1.83388109e+01, 1.23195860e+01, 1.09504878e+01, 3.01561284e+00,
       1.99897313e+00, 1.37809286e+00, 7.68527508e+00, 2.82842543e+01,
       2.53426642e+00, 1.01443748e+01, 1.10460289e+01, 3.54773399e+02,
       1.19159440e+01, 2.91218743e+00, 9.36018188e+01, 1.03707319e+01,
       4.93764601e+00, 2.74301262e+00, 2.56593382e+01, 1.19439923e+01,
       1.12574614e+01, 1.12805851e+01, 2.66404920e+00, 2.18988566e+01,
       8.22222290e+00, 7.97987804e+00, 2.44417834e+00, 8.28880754e+00,
       9.16780696e+00, 2.44861732e+00, 9.66709905e+00, 2.57735820e+00,
       8.12980944e+01, 8.03770537e+00, 8.44024706e+00, 9.41814723e+00,
       1.62404347e+01, 2.44443021e+00, 2.78977022e+00, 1.02073135e+01,
       2.47067881e+00, 3.08043578e+01, 2.07468336e+01, 1.01378342e+01,
       3.17528496e+00, 8.52847567e+00, 1.59886057e+03, 1.00115396e+01,
       1.66402286e+01, 3.32495575e+00, 3.32323794e+00, 3.25635161e+00,
       1.32411652e+01, 1.31120748e+01, 1.55459802e+01, 1.61780026e+01,
       3.41915703e+00, 1.00421073e+02, 2.65795169e+03, 6.43569660e+00,
       6.92717614e+00, 5.57880783e+00, 2.70433984e+01, 5.89577475e+00,
       2.98478430e+01, 2.19388348e+01, 5.77013063e+00, 1.24843805e+01,
       3.41786828e+01, 5.99648275e+00, 5.45587382e+00, 4.78301306e+00,
       5.41420385e+01, 7.50140258e+02, 1.82987166e+01, 1.86186662e+01,
       1.90367301e+01, 4.32893085e+00, 1.72644186e+01, 4.39079728e+00,
       4.30387077e+00, 1.85210480e+01, 4.31409268e+00, 4.28098307e+00,
       4.23169718e+00, 4.45772529e+00, 4.28599677e+00, 4.21848154e+00,
       1.79923231e+03, 4.28724766e+00, 2.06496296e+01, 1.77600953e+01,
       4.30824423e+00, 1.65066778e+01, 1.66694970e+01, 3.87949152e+00,
       8.92005568e+00, 4.89119222e+01, 4.15773574e+02, 1.23373742e+01,
       1.05745256e+01, 1.27114121e+01, 2.81910934e+00, 2.96051846e+00,
       1.06818648e+01, 1.05624082e+01, 1.26633552e+01, 2.98413320e+00,
       1.42268171e+01, 1.50218663e+01, 3.44415250e+00, 1.17717212e+01,
       1.19102202e+01, 6.62984400e+00, 1.19042541e+01, 1.22262999e+01,
       3.50084152e+00, 3.50555215e+00, 1.39019830e+02, 1.12139224e+01,
       3.13237839e+00, 2.92136893e+00, 1.08814415e+01, 3.05893612e+00,
       1.37204836e+02, 1.61812416e+01, 3.07164254e+00, 1.20082270e+01,
       2.90501423e+00, 3.15801635e+00, 2.98444500e+00, 1.62633718e+01,
       1.36792552e+01, 1.19191980e+01, 3.15991406e+00, 1.28714283e+01,
       1.41425590e+01, 1.56956402e+02, 3.77786431e+00, 5.32252554e+01,
       2.88003325e+00, 2.95335064e+00, 3.06412077e+00, 2.28044329e+01,
       2.81997075e+00, 3.13161702e+00, 1.28991766e+01, 1.29081973e+01,
       1.22616888e+01, 2.88155046e+00, 9.47241983e+00, 2.76812258e+00,
       9.37845621e+00, 2.91476145e+00, 1.13982334e+01, 1.03966020e+01,
       9.97748427e+00, 9.17633762e+00, 8.26039052e+01, 1.41885351e+02,
       1.43545702e+01, 1.36246292e+01, 1.49657028e+01, 1.11977607e+01,
       1.20664228e+01, 2.54682059e+00, 1.46416430e+01, 9.66501074e+00,
       2.64496050e+00, 2.54506330e+00, 2.63104243e+00, 2.50549827e+00,
       2.50454798e+00, 1.13156474e+01, 1.56892666e+01, 1.02625558e+01,
       1.29214063e+01, 3.11352134e+00, 1.23393811e+01, 1.17993839e+01,
       1.38754843e+01, 1.33882913e+01, 2.89196720e+00, 2.82057962e+00,
       1.24032215e+01, 1.04155769e+01, 3.30712719e+00, 8.65157094e+00,
       2.25676985e+00, 2.75137157e+00, 2.28044939e+00, 9.06498165e+00]), 'std_fit_time': array([6.48882362e-02, 7.41744588e-01, 6.52506310e-01, 1.52217643e-01,
       1.97481051e-01, 1.45373161e-01, 7.12933135e-02, 2.65421453e-01,
       1.18405136e-01, 4.85526923e-01, 1.37341577e-01, 2.65565695e-01,
       2.45847473e-01, 6.91627778e-02, 6.47597257e-01, 1.00936594e+00,
       1.92568802e-01, 2.91764981e-01, 1.84295519e-01, 3.48528407e+00,
       2.73388038e-01, 2.42834034e-01, 1.23516379e+00, 7.20663469e-01,
       6.65695917e-01, 1.61485634e-01, 9.09457731e-01, 8.41339457e-01,
       1.60072924e-01, 2.73351849e-01, 1.20382041e-01, 4.81829145e-01,
       1.84785378e+00, 2.14628200e-01, 1.68636536e-02, 2.08886710e-01,
       6.71918238e-02, 5.92072995e-02, 2.27460836e-01, 1.93036109e-01,
       9.43966351e-01, 7.35526371e-02, 1.85118634e-01, 1.10171437e-01,
       2.04290277e-01, 2.43966762e-02, 9.86996327e-02, 8.61080978e-02,
       4.33970113e-02, 6.30755006e-01, 1.80852392e+00, 1.35204510e-01,
       1.88704874e-01, 1.44942171e-01, 7.28877231e+01, 9.07412677e-01,
       2.59588828e-01, 2.05814486e-01, 8.95570112e-02, 6.71777550e-02,
       4.39902271e-01, 2.90259345e-01, 1.59765640e-01, 1.66160675e-01,
       5.83209017e-02, 3.17986582e+00, 4.44646753e+02, 9.78548634e-01,
       7.75782575e-01, 1.49737619e-01, 7.43933292e-01, 3.62988892e-01,
       4.09360764e-01, 1.32845585e+00, 4.24926563e-01, 3.54528346e+00,
       8.64223192e-01, 4.51728837e-01, 1.68702166e-01, 1.29436231e-01,
       6.09008505e-01, 6.16880706e+00, 4.66244294e-01, 3.74098754e-01,
       2.53650863e-01, 1.21341121e-01, 2.22605963e-01, 1.32394388e-01,
       1.04622436e-01, 2.55635932e-01, 5.64638259e-02, 1.05588395e-01,
       8.07975087e-02, 8.65511029e-02, 9.56211015e-02, 9.05451124e-02,
       1.74909925e+01, 1.00766204e-01, 2.25519919e-01, 2.68529168e-01,
       9.19908410e-02, 2.16036289e-01, 4.93061604e-01, 5.63218850e-02,
       1.54462647e-01, 2.76282059e+00, 5.21673851e+00, 3.12341592e-01,
       1.46521473e-01, 2.11899235e-01, 7.18293262e-02, 4.33007370e-02,
       1.59164555e-01, 1.69831153e-01, 2.36469484e-01, 2.02864283e-01,
       3.71215156e-01, 2.28332054e-01, 8.41175448e-02, 2.89068171e-01,
       1.69565091e-01, 1.20539428e-01, 4.66492527e-01, 1.02361968e-01,
       8.23322599e-02, 4.86890199e-02, 1.22932865e+00, 3.14139659e-01,
       5.14568368e-02, 1.35370327e-01, 3.56729599e-01, 1.62094145e-02,
       1.74534475e+01, 5.69166035e-01, 4.27238213e-02, 7.56251588e-02,
       7.90719052e-02, 3.09239761e-02, 2.99490251e-02, 2.11548200e-01,
       3.20589677e-01, 2.77727034e-01, 1.24161835e-01, 2.89765254e-01,
       7.07999701e-01, 1.38961027e+01, 6.76968151e-02, 3.33151420e+00,
       9.74554428e-02, 7.27342432e-02, 4.73548386e-02, 1.33915807e+00,
       6.41275684e-02, 8.16982353e-02, 8.43641570e-02, 1.55050810e-01,
       2.47027872e-01, 5.99461555e-02, 1.17353918e-01, 2.82811075e-02,
       1.06131207e-01, 5.20984308e-02, 2.57229854e-01, 1.88185657e-01,
       2.03462816e-01, 1.83915404e-01, 8.74502863e-01, 2.46643586e+00,
       5.55032481e-01, 1.55853954e-01, 1.47885882e-01, 7.43552645e-01,
       3.14241065e-01, 1.90637025e-01, 1.28658016e-01, 6.01587606e-01,
       7.45788792e-02, 5.33622025e-02, 3.35391650e-02, 3.59111651e-02,
       3.08248225e-02, 2.32165421e-01, 7.88359153e-01, 2.63846554e-01,
       2.14144249e-01, 8.11474811e-02, 3.42748847e-01, 1.99944750e-01,
       1.09551783e-01, 8.88677837e-02, 1.33722300e-01, 1.69954393e-01,
       3.61592181e-01, 3.12228112e-01, 2.16941803e-01, 1.22099023e-01,
       1.32850671e-01, 7.98957770e-02, 1.83706241e-01, 1.41959777e-01]), 'mean_score_time': array([0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.66050959, 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       1.05113244, 0.        , 1.11878176, 0.        , 1.07015138,
       0.59048204, 0.        , 1.53970017, 0.        , 0.56536598,
       0.        , 1.19040828, 0.        , 0.        , 0.        ,
       0.        , 0.51183114, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       1.50229492, 0.        , 0.        , 0.        , 0.69450064,
       0.        , 0.        , 0.        , 0.        , 1.63894925,
       0.61297522, 0.        , 0.64652801, 0.        , 3.3082551 ,
       0.        , 0.74658298, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       3.11488013, 1.86115198, 0.        , 0.        , 0.        ,
       0.        , 0.        , 1.20239663, 0.        , 0.        ,
       1.0873755 , 1.96275849, 0.        , 0.        , 0.        ,
       1.19564281, 1.11295223, 0.        , 0.        , 1.56482544,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.70254622, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.93086367,
       1.25271788, 1.21369205, 0.        , 0.        , 0.94772339,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.75737333, 0.        , 0.        , 0.        ,
       0.        , 1.16023459, 0.        , 0.        , 0.        ,
       0.56027102, 0.        , 0.68669701, 1.37099218, 0.        ,
       0.        , 0.        , 0.        , 0.        , 1.13521008,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.59676952, 0.        , 1.31238203, 0.        , 0.        ,
       0.        , 0.69408345, 0.        , 0.        , 0.        ,
       0.61254578, 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.71747832, 1.95347438, 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 1.24767904,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.61255989, 0.59254251, 0.        , 1.05188155,
       0.        , 0.        , 0.        , 0.        , 0.63848681,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ]), 'std_score_time': array([0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.13690949, 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.09089101, 0.        , 0.09727304, 0.        , 0.04726981,
       0.04056076, 0.        , 0.29575023, 0.        , 0.05839   ,
       0.        , 0.15385104, 0.        , 0.        , 0.        ,
       0.        , 0.03911611, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.07239961, 0.        , 0.        , 0.        , 0.02698119,
       0.        , 0.        , 0.        , 0.        , 0.0929418 ,
       0.02309865, 0.        , 0.04587623, 0.        , 0.54610052,
       0.        , 0.0944825 , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.39018363, 0.79879369, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.20911575, 0.        , 0.        ,
       0.07632327, 0.27110457, 0.        , 0.        , 0.        ,
       0.10283194, 0.09473071, 0.        , 0.        , 0.11869544,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.14902672, 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.0652761 ,
       0.16441214, 0.05861868, 0.        , 0.        , 0.06826429,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.07214795, 0.        , 0.        , 0.        ,
       0.        , 0.05216706, 0.        , 0.        , 0.        ,
       0.02860783, 0.        , 0.04828849, 0.06960289, 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.06740972,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.05343035, 0.        , 0.04655799, 0.        , 0.        ,
       0.        , 0.04186394, 0.        , 0.        , 0.        ,
       0.03637617, 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.04118714, 0.12434178, 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.13700145,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.0410292 , 0.05470714, 0.        , 0.06782821,
       0.        , 0.        , 0.        , 0.        , 0.05028181,
       0.        , 0.        , 0.        , 0.        , 0.        ,
       0.        , 0.        , 0.        , 0.        , 0.        ]), 'param_clf__C': masked_array(data=[0.42022513971567677, 0.11386212788439731,
                   544.2201101402593, 0.787159228486243,
                   0.002989946869777147, 10.372533968435413,
                   12.241881349474871, 0.07179105123958829,
                   8.76678863113127, 0.002111525210549778,
                   0.0027495803127620968, 113.06786961713446,
                   0.005781224110179707, 0.47516979659091674,
                   1.5223263967705, 0.20214329469642417,
                   0.010192292881755625, 0.005369096127786736,
                   206.89240292080746, 35.725525784197366,
                   27.636325101551694, 0.048215619829078196,
                   529.593706027609, 4.557706510404431,
                   0.0010355646599539792, 1.0700020986523155,
                   0.004325957603005501, 0.3271758138049276,
                   839.3132058454073, 25.373085997132918,
                   0.3802037916440303, 12.515371782081077,
                   714.4162373231242, 31.450910600523752,
                   669.9475102990847, 4.30608603247084, 69.98608011377746,
                   147.23469943217478, 0.005416414992623258,
                   27.550982802884032, 0.014789866904282422,
                   1.0925830279693312, 2.173389075494629,
                   8.182469575290002, 0.015033249355740201,
                   548.7184214026825, 71.36282513211975,
                   0.0036906854636722807, 0.37516438511214395,
                   0.02226632539694695, 730.8213899505455,
                   355.91352852599584, 0.001387742870923526,
                   0.002209137141823145, 0.03347329857709512,
                   154.47987340709025, 132.16141214919782,
                   241.40330607672402, 0.6854997906217491,
                   0.0550470906678685, 6.643170533716139,
                   0.15942879768709267, 0.45791148697703665,
                   0.5763576235352021, 2.915142172634785,
                   499.2274066728465, 5.221510938348504,
                   0.013887803854915951, 5.418051460013835,
                   0.27855326774030814, 1.1533854234218028,
                   0.011595462753651541, 1.955274976418206,
                   0.0020193849964176887, 38.63369359554935,
                   0.03711592205038168, 0.012728642972956145,
                   0.08284401200008004, 1.7522790877541579,
                   76.42146882863648, 52.99032690973964,
                   26.41958012786089, 0.12214046296581768,
                   0.009293590759608087, 0.02777303589320978,
                   50.605733668510744, 175.41569661436313,
                   52.15235465963938, 2.7840190107128384,
                   0.04933306783981362, 37.172072600809166,
                   26.45076128497106, 0.0016272521697061695,
                   814.2314078233737, 0.034435638787789255,
                   15.0300484112724, 134.7917347963711,
                   0.002610536500723534, 76.01197022672005,
                   257.79449537548226, 0.017608826815094476,
                   14.714681128283171, 152.0922785568728,
                   0.0013929102840585241, 0.24138267686088022,
                   29.331289207689988, 355.04924819443227,
                   126.18278187992274, 37.4826977622457,
                   0.040959210984822934, 40.51146310122291,
                   0.06709036299101302, 0.6525764483150497,
                   0.2241251174510239, 42.791334994266386,
                   13.286506669584941, 0.0013557450832652096,
                   0.007902094034181593, 18.030224113741138,
                   1.0158082010981582, 19.31347441917811,
                   5.732843912741076, 4.327874265432374,
                   2.612153794094922, 0.3750482054448878,
                   0.0022123295808449497, 0.2584683372053119,
                   10.81006443350211, 0.0025511831071079612,
                   0.0112968196253259, 39.65980167606564,
                   13.366846002873986, 0.0015090389217364563,
                   0.0060680832352567535, 1.3873903327133716,
                   280.3051024066503, 0.003434717789494673,
                   387.3883834515131, 257.92724894084444,
                   0.12006475454937149, 1.5485274688149995,
                   0.09747825687012276, 0.3154712338977796,
                   0.005603988428347205, 0.5482198903905837,
                   0.9582488183546161, 0.26198590510675185,
                   488.8963260251549, 496.681521308716,
                   120.60624193378436, 0.0169714942125131,
                   619.3502670529793, 0.004114261895435643,
                   0.29393982369601906, 91.83180943037927,
                   0.00575109232015423, 0.8969359628501872,
                   0.8732136737096668, 847.4876636340872,
                   66.16423682050882, 648.1791935139133,
                   0.025810679832801248, 0.0276582291584519,
                   7.5747806398977335, 0.3470562024183906,
                   158.70834084051052, 0.4306069185761351,
                   0.0037131498831708878, 515.9642859713593,
                   0.04259554722622908, 2.6963860340870536,
                   10.552267290934182, 54.694678150955085,
                   0.001770561358147136, 0.039169042768167205,
                   116.02107524079953, 0.0011836476532055883,
                   2.9586893179299056, 0.01287649353500343,
                   0.16646002158158013, 0.09944767334009781,
                   391.73894435869346, 10.705510503160689,
                   0.004591039123804563, 1.0900371316376933,
                   0.04663991287222376, 29.917394015985654,
                   0.028447389432324274, 1.7408665521598012,
                   225.08621171019766, 9.730289389220504,
                   223.19143488378734, 4.627280315065617,
                   2.040914260078157, 11.394953216179216,
                   0.012167705054670155, 610.8381001412969,
                   0.0020541544827901445, 0.004846466996189048,
                   4.294175918532423],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__dual': masked_array(data=[False, True, True, True, True, True, True, True, False,
                   True, True, False, False, False, True, False, True,
                   False, False, False, False, True, False, False, False,
                   True, False, True, True, True, False, False, True,
                   True, True, True, True, True, True, False, False, True,
                   True, True, False, True, True, False, True, False,
                   True, False, False, True, False, False, False, True,
                   True, False, False, False, True, True, True, False,
                   False, True, True, False, True, False, False, True,
                   True, False, True, False, True, True, False, False,
                   True, True, False, True, True, True, False, True, True,
                   False, True, False, True, True, False, False, True,
                   True, True, True, False, True, False, False, False,
                   False, True, False, False, False, True, True, False,
                   False, True, True, False, True, False, False, True,
                   True, False, True, False, True, True, False, False,
                   True, False, False, True, False, False, False, False,
                   False, False, True, True, True, False, False, True,
                   False, True, True, True, True, False, True, True,
                   False, True, True, True, False, True, True, True,
                   False, False, False, False, False, True, True, True,
                   True, True, True, False, True, True, True, True, True,
                   True, False, False, True, True, True, True, True, True,
                   False, True, False, False, False, False, True, True,
                   False, False, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__fit_intercept': masked_array(data=[False, False, False, False, False, False, True, False,
                   True, True, True, False, True, False, True, False,
                   False, False, True, False, False, False, False, True,
                   True, False, False, True, False, True, True, True,
                   False, False, False, False, False, False, False, False,
                   True, True, False, True, True, False, False, True,
                   True, True, True, True, False, True, False, True, True,
                   True, True, False, False, True, False, False, True,
                   True, True, True, True, False, False, True, False,
                   True, False, True, True, False, False, True, False,
                   True, False, True, False, True, True, True, True, True,
                   True, False, True, False, False, False, True, True,
                   False, True, True, True, False, True, True, True,
                   False, False, True, False, False, False, False, False,
                   False, True, False, False, True, False, True, True,
                   False, True, False, False, True, False, True, False,
                   True, False, True, True, False, False, True, True,
                   False, True, True, True, False, True, True, True, True,
                   False, False, True, False, False, False, False, False,
                   True, True, True, False, False, False, False, False,
                   False, True, True, True, False, False, True, False,
                   False, False, False, True, True, True, False, False,
                   True, True, True, True, False, False, True, True,
                   False, False, True, False, False, False, False, True,
                   False, True, True, True, False],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__l1_ratio': masked_array(data=[0.9464318162100379, 0.5384469259504413,
                   0.19458940778584477, 0.16135751118800512,
                   0.3241995429728465, 0.5877437149499078,
                   0.5636640266419972, 0.515722616866515,
                   0.5366299985988323, 0.45580594709520805,
                   0.9831536861583402, 0.6003664926291193,
                   0.6517383348245195, 0.5306209525422895,
                   0.005558950227423143, 0.49730930083042035,
                   0.6206957032883181, 0.7684136276457924,
                   0.6826067676439019, 0.48095112750185687,
                   0.9583722737067599, 0.43651723506321183,
                   0.2616212361178143, 0.5674858900521303,
                   0.9998022681116802, 0.52976595780221,
                   0.7121063723399707, 0.09621091034127516,
                   0.5628616441234765, 0.6666597833837518,
                   0.8361058430318411, 0.28715007564513184,
                   0.6162542763215387, 0.6555515814254521,
                   0.255341382276708, 0.12469717044894923,
                   0.3401610836422473, 0.47142174526723235,
                   0.41789975727417816, 0.17287154632981594,
                   0.5135283710339654, 0.96151675925144,
                   0.5156267202630149, 0.05308849212878508,
                   0.40556853843772667, 0.9696275825254536,
                   0.7564369951858407, 0.5962510326752452,
                   0.8174336959936787, 0.6217225215719309,
                   0.5167871593008962, 0.31579850896924866,
                   0.15480162223035354, 0.020920589112543464,
                   0.5790356826861355, 0.8636573175247232,
                   0.5762800130504916, 0.5498706986610976,
                   0.2930064434940891, 0.7302455019570131,
                   0.5666533994919801, 0.6335603724002425,
                   0.49753002033025717, 0.6837149700694538,
                   0.18069565503242302, 0.3014898492123338,
                   0.11666719790138902, 0.11334486251267384,
                   0.2148273278456433, 0.6009920496439968,
                   0.6691419881892566, 0.3192817441699317,
                   0.06985711580940002, 0.7190712557259193,
                   0.8508755082701146, 0.7149964117263518,
                   0.3311288151508701, 0.702947096555036,
                   0.07190585088818557, 0.30560621466695126,
                   0.5660751837857886, 0.6779981348880857,
                   0.39379832384852764, 0.31301321568214024,
                   0.6497351645623134, 0.33059375215973874,
                   0.1972888045869221, 0.7852988827919768,
                   0.5560095577424843, 0.3139378627980437,
                   0.9988641175254434, 0.49705894003351025,
                   0.21734679323757977, 0.5136959331857112,
                   0.11795589367773707, 0.5117132591148876,
                   0.3380149576650542, 0.5779143750711724,
                   0.7610815716782653, 0.6657411752062086,
                   0.5805813051302707, 0.8148644369078124,
                   0.3924837059197257, 0.30119665504782966,
                   0.9282526710571656, 0.013195139497579333,
                   0.6107423271402239, 0.9804546633636005,
                   0.8767069247518549, 0.38876094662146155,
                   0.27516113754118876, 0.4124819183872144,
                   0.18441605869795763, 0.6134047391523942,
                   0.627572214204729, 0.5074175081097847,
                   0.2863787157189215, 0.6689869003513076,
                   0.6788941669959058, 0.7054474672187933,
                   0.3136941150067475, 0.4394851735981965,
                   0.5281849765437311, 0.4241901288884693,
                   0.41881706551983244, 0.5786349324223675,
                   0.40987505127580115, 0.3337559740348043,
                   0.6056696227614005, 0.22258541750423066,
                   0.824925936432956, 0.5427042157672516,
                   0.6224380344446186, 0.3116447158633594,
                   0.005188273582226732, 0.7109405204002682,
                   0.1089348995631545, 0.4286165399596077,
                   0.6328075780738915, 0.5955615750252052,
                   0.7639397049019885, 0.09954939757256831,
                   0.1388838774301825, 0.04503417913187602,
                   0.683721192382513, 0.7209230442275124,
                   0.5076836085325456, 0.6351252605925016,
                   0.3512983580821665, 0.5193637133170328,
                   0.7755247871748316, 0.3449790382076475,
                   0.5278905805801809, 0.39445756790504494,
                   0.4381480506009777, 0.6364390407222937,
                   0.2660321553620638, 0.3830462414850886,
                   0.6028829500274754, 0.8196251192819556,
                   0.8176713524513296, 0.32748151916078216,
                   0.8774517408654212, 0.40349959002683045,
                   0.5219180191490546, 0.20659663510880533,
                   0.48844349955108946, 0.4405707372424553,
                   0.49923796889078065, 0.13298348157266326,
                   0.6673034734353765, 0.1813700531557667,
                   0.36888097914032814, 0.014170303959560537,
                   0.30284048480212244, 0.22651039432442754,
                   0.7812739464388843, 0.8439150994858698,
                   0.8529155165250641, 0.6335915443335912,
                   0.8542606817603025, 0.8271725847221215,
                   0.6147281096177195, 0.9430802174975174,
                   0.4524637982764549, 0.017187839158494533,
                   0.22252400124150606, 0.46980143079820536,
                   0.04616795689772757, 0.7557012470813788,
                   0.5206479789512878, 0.7314122499203048,
                   0.9673222371126132, 0.13532604521746328,
                   0.24394250103694615, 0.9062060825269972,
                   0.5343212944843139, 0.12434030949967445,
                   0.09884029909297876, 0.6785884885394604],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__max_iter': masked_array(data=[172, 132, 61, 180, 66, 184, 138, 194, 182, 162, 153,
                   143, 196, 145, 70, 111, 117, 89, 111, 143, 135, 134,
                   129, 127, 118, 64, 52, 73, 91, 63, 167, 115, 191, 109,
                   64, 52, 173, 154, 196, 173, 127, 163, 182, 126, 84,
                   191, 64, 148, 121, 196, 156, 184, 56, 116, 57, 67, 145,
                   178, 143, 79, 122, 84, 103, 90, 93, 104, 126, 116, 99,
                   157, 193, 90, 170, 175, 165, 187, 80, 199, 128, 146,
                   106, 174, 117, 84, 162, 103, 69, 152, 52, 189, 73, 145,
                   119, 170, 129, 74, 153, 198, 173, 181, 187, 90, 174,
                   125, 115, 52, 128, 69, 81, 151, 150, 101, 63, 76, 95,
                   58, 70, 186, 197, 56, 108, 100, 52, 137, 125, 59, 193,
                   135, 90, 54, 174, 149, 74, 199, 167, 164, 158, 154,
                   171, 136, 70, 137, 136, 51, 78, 135, 143, 193, 193, 55,
                   114, 93, 156, 84, 183, 98, 94, 186, 94, 150, 154, 194,
                   145, 138, 173, 78, 182, 147, 80, 68, 198, 142, 75, 113,
                   90, 156, 116, 111, 181, 139, 164, 133, 55, 185, 99,
                   131, 133, 159, 141, 80, 129, 99, 59, 137, 161, 90, 175,
                   89, 172, 122],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__multi_class': masked_array(data=['ovr', 'auto', 'ovr', 'ovr', 'multinomial', 'auto',
                   'ovr', 'auto', 'ovr', 'ovr', 'ovr', 'multinomial',
                   'multinomial', 'auto', 'ovr', 'ovr', 'auto', 'auto',
                   'auto', 'multinomial', 'auto', 'ovr', 'multinomial',
                   'ovr', 'ovr', 'auto', 'auto', 'multinomial',
                   'multinomial', 'auto', 'multinomial', 'ovr', 'auto',
                   'auto', 'auto', 'ovr', 'auto', 'auto', 'multinomial',
                   'multinomial', 'ovr', 'ovr', 'ovr', 'multinomial',
                   'ovr', 'multinomial', 'auto', 'ovr', 'multinomial',
                   'auto', 'auto', 'ovr', 'auto', 'auto', 'auto', 'auto',
                   'auto', 'ovr', 'auto', 'auto', 'auto', 'ovr',
                   'multinomial', 'ovr', 'multinomial', 'multinomial',
                   'auto', 'auto', 'multinomial', 'multinomial',
                   'multinomial', 'auto', 'ovr', 'auto', 'ovr',
                   'multinomial', 'auto', 'auto', 'auto', 'ovr', 'ovr',
                   'multinomial', 'multinomial', 'ovr', 'auto',
                   'multinomial', 'multinomial', 'multinomial', 'auto',
                   'multinomial', 'ovr', 'multinomial', 'ovr',
                   'multinomial', 'ovr', 'multinomial', 'ovr',
                   'multinomial', 'multinomial', 'ovr', 'multinomial',
                   'ovr', 'multinomial', 'auto', 'auto', 'auto',
                   'multinomial', 'multinomial', 'multinomial', 'ovr',
                   'auto', 'ovr', 'multinomial', 'auto', 'multinomial',
                   'multinomial', 'ovr', 'auto', 'multinomial',
                   'multinomial', 'multinomial', 'multinomial',
                   'multinomial', 'ovr', 'auto', 'multinomial', 'ovr',
                   'auto', 'ovr', 'auto', 'multinomial', 'ovr',
                   'multinomial', 'multinomial', 'multinomial',
                   'multinomial', 'multinomial', 'ovr', 'ovr', 'ovr',
                   'multinomial', 'ovr', 'multinomial', 'auto',
                   'multinomial', 'auto', 'ovr', 'auto', 'auto', 'auto',
                   'ovr', 'auto', 'multinomial', 'ovr', 'ovr', 'auto',
                   'ovr', 'auto', 'multinomial', 'multinomial',
                   'multinomial', 'ovr', 'ovr', 'auto', 'multinomial',
                   'multinomial', 'ovr', 'multinomial', 'ovr',
                   'multinomial', 'ovr', 'multinomial', 'multinomial',
                   'ovr', 'multinomial', 'auto', 'ovr', 'ovr', 'ovr',
                   'multinomial', 'multinomial', 'auto', 'ovr',
                   'multinomial', 'ovr', 'multinomial', 'ovr', 'ovr',
                   'ovr', 'multinomial', 'multinomial', 'auto',
                   'multinomial', 'ovr', 'multinomial', 'auto', 'ovr',
                   'ovr', 'multinomial', 'auto'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__penalty': masked_array(data=['l1', 'elasticnet', 'l2', 'elasticnet', 'none', 'none',
                   'l2', 'elasticnet', 'none', 'l2', 'l1', 'elasticnet',
                   'elasticnet', 'l1', 'none', 'l2', 'elasticnet', 'l2',
                   'elasticnet', 'elasticnet', 'l2', 'elasticnet', 'none',
                   'elasticnet', 'l2', 'l1', 'l2', 'l2', 'none', 'l1',
                   'l1', 'l2', 'elasticnet', 'elasticnet', 'l1', 'l2',
                   'l2', 'none', 'l1', 'l1', 'l2', 'l2', 'none', 'l2',
                   'l2', 'l1', 'l1', 'l1', 'l1', 'l2', 'l2', 'elasticnet',
                   'l1', 'elasticnet', 'none', 'elasticnet', 'l2', 'none',
                   'none', 'elasticnet', 'l1', 'elasticnet', 'elasticnet',
                   'l1', 'none', 'l2', 'none', 'elasticnet', 'l2',
                   'elasticnet', 'l2', 'elasticnet', 'l2', 'l1',
                   'elasticnet', 'l2', 'l2', 'l1', 'none', 'none', 'l2',
                   'elasticnet', 'l2', 'none', 'l2', 'l1', 'l1', 'l1',
                   'elasticnet', 'l2', 'elasticnet', 'l1', 'elasticnet',
                   'elasticnet', 'elasticnet', 'elasticnet', 'elasticnet',
                   'elasticnet', 'elasticnet', 'l2', 'l1', 'none',
                   'elasticnet', 'l1', 'l2', 'l2', 'l1', 'elasticnet',
                   'none', 'l1', 'l1', 'l1', 'l2', 'l2', 'l1', 'l2',
                   'none', 'none', 'l1', 'l2', 'l1', 'l2', 'l2', 'l1',
                   'elasticnet', 'l1', 'l2', 'none', 'l2', 'elasticnet',
                   'none', 'l2', 'none', 'elasticnet', 'elasticnet',
                   'elasticnet', 'none', 'elasticnet', 'elasticnet', 'l2',
                   'l1', 'l1', 'elasticnet', 'elasticnet', 'l1', 'none',
                   'l1', 'l2', 'l1', 'l2', 'none', 'l2', 'none',
                   'elasticnet', 'l1', 'none', 'l1', 'elasticnet', 'l1',
                   'l1', 'l1', 'elasticnet', 'l1', 'elasticnet',
                   'elasticnet', 'elasticnet', 'l2', 'none', 'l2',
                   'elasticnet', 'l1', 'l1', 'none', 'l1', 'l2', 'l1',
                   'none', 'none', 'elasticnet', 'none', 'none', 'l2',
                   'l1', 'none', 'l2', 'l1', 'elasticnet', 'elasticnet',
                   'elasticnet', 'l2', 'none', 'elasticnet', 'elasticnet',
                   'l1', 'elasticnet', 'l2', 'none', 'elasticnet',
                   'elasticnet', 'elasticnet'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__solver': masked_array(data=['lbfgs', 'newton-cg', 'newton-cg', 'lbfgs',
                   'liblinear', 'liblinear', 'newton-cg', 'newton-cg',
                   'lbfgs', 'saga', 'newton-cg', 'liblinear', 'lbfgs',
                   'lbfgs', 'lbfgs', 'sag', 'newton-cg', 'lbfgs',
                   'newton-cg', 'saga', 'newton-cg', 'sag', 'sag',
                   'newton-cg', 'liblinear', 'liblinear', 'sag', 'saga',
                   'sag', 'newton-cg', 'newton-cg', 'lbfgs', 'sag',
                   'newton-cg', 'sag', 'lbfgs', 'newton-cg', 'saga',
                   'saga', 'lbfgs', 'saga', 'saga', 'saga', 'liblinear',
                   'sag', 'newton-cg', 'sag', 'sag', 'saga', 'newton-cg',
                   'liblinear', 'sag', 'saga', 'liblinear', 'newton-cg',
                   'newton-cg', 'sag', 'liblinear', 'lbfgs', 'newton-cg',
                   'lbfgs', 'liblinear', 'newton-cg', 'lbfgs', 'lbfgs',
                   'sag', 'newton-cg', 'lbfgs', 'newton-cg', 'newton-cg',
                   'liblinear', 'sag', 'liblinear', 'newton-cg',
                   'newton-cg', 'newton-cg', 'liblinear', 'newton-cg',
                   'liblinear', 'newton-cg', 'liblinear', 'saga', 'saga',
                   'sag', 'lbfgs', 'lbfgs', 'liblinear', 'sag',
                   'liblinear', 'lbfgs', 'saga', 'sag', 'sag',
                   'newton-cg', 'saga', 'liblinear', 'saga', 'sag',
                   'saga', 'sag', 'liblinear', 'saga', 'sag', 'newton-cg',
                   'sag', 'liblinear', 'saga', 'liblinear', 'liblinear',
                   'liblinear', 'sag', 'sag', 'sag', 'lbfgs', 'newton-cg',
                   'liblinear', 'sag', 'newton-cg', 'lbfgs', 'lbfgs',
                   'lbfgs', 'sag', 'lbfgs', 'newton-cg', 'liblinear',
                   'lbfgs', 'saga', 'liblinear', 'lbfgs', 'sag', 'lbfgs',
                   'saga', 'newton-cg', 'saga', 'liblinear', 'liblinear',
                   'liblinear', 'lbfgs', 'newton-cg', 'sag', 'lbfgs',
                   'liblinear', 'newton-cg', 'saga', 'newton-cg',
                   'newton-cg', 'liblinear', 'saga', 'sag', 'newton-cg',
                   'lbfgs', 'liblinear', 'liblinear', 'saga', 'sag',
                   'sag', 'saga', 'liblinear', 'liblinear', 'sag', 'sag',
                   'sag', 'liblinear', 'liblinear', 'lbfgs', 'lbfgs',
                   'saga', 'saga', 'newton-cg', 'sag', 'saga',
                   'newton-cg', 'lbfgs', 'newton-cg', 'sag', 'lbfgs',
                   'lbfgs', 'sag', 'newton-cg', 'newton-cg', 'sag', 'sag',
                   'liblinear', 'saga', 'liblinear', 'newton-cg', 'sag',
                   'newton-cg', 'lbfgs', 'saga', 'saga', 'sag', 'lbfgs',
                   'sag', 'sag', 'saga', 'sag', 'newton-cg', 'sag',
                   'newton-cg'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__tol': masked_array(data=[8.438354474773041e-11, 3.6556636094985813e-07,
                   6.662172818431862e-09, 1.1489057059138324e-08,
                   1.521537002396315e-08, 7.179355964127938e-10,
                   1.6772695450992417e-09, 3.3731789044412045e-09,
                   9.559157017808572e-10, 1.9628541384539257e-07,
                   2.637705965449986e-10, 1.7167156471938707e-10,
                   1.2363836370689449e-11, 9.146701598311042e-11,
                   1.101548493811732e-10, 9.804197193951465e-06,
                   5.9519333381933545e-09, 2.129348014158844e-05,
                   3.1109013310562836e-06, 2.8014287807609434e-08,
                   6.309435804251798e-08, 3.8964537796682804e-10,
                   2.3208429779138817e-11, 6.980295816895762e-09,
                   1.6293153523242907e-11, 8.30393019070527e-05,
                   1.1310273619324638e-10, 1.1255987946589486e-05,
                   1.9965173921548342e-11, 1.3312064001922356e-10,
                   2.1386100770920808e-05, 3.06791797413607e-11,
                   1.303132652566515e-10, 6.574209165042156e-07,
                   3.245365322588968e-05, 3.8750823992458196e-05,
                   7.379196500342556e-11, 1.0409176469611837e-08,
                   6.975168527499795e-11, 1.3418687867086382e-06,
                   5.4874611047872254e-09, 3.511914868853273e-10,
                   1.4179980489746399e-10, 1.590969077389071e-05,
                   5.055445055164595e-09, 4.583067630815626e-05,
                   4.58703907690095e-10, 5.0544686585719365e-05,
                   4.168555079007728e-08, 2.2114861739726267e-07,
                   2.4031101448687394e-07, 1.9700101379169665e-06,
                   3.6268062344301653e-09, 2.8209229004643608e-05,
                   1.2982284932575753e-11, 9.668741369097144e-07,
                   7.568843758429528e-05, 2.882371399465696e-10,
                   5.182518210338807e-06, 1.4806740523109172e-06,
                   3.786457320137761e-10, 2.2103509641242166e-08,
                   9.759827822351545e-08, 4.472797362524292e-08,
                   2.287943076653069e-11, 4.714281554109203e-09,
                   2.0488542918634292e-08, 9.018813765461922e-08,
                   2.4485572321836313e-05, 7.713371662085023e-10,
                   2.7643049665176567e-10, 1.2734856436809687e-10,
                   4.82371085088603e-10, 5.2185492443741716e-11,
                   3.039511423615304e-10, 6.084016695289377e-10,
                   1.0424973753750217e-11, 1.559538124654345e-09,
                   7.475320032976484e-07, 2.2169316224464377e-07,
                   9.829473195068038e-06, 1.7754430843405642e-11,
                   1.9665694103629625e-10, 4.4800885947450536e-07,
                   3.9989951286157304e-10, 5.349120896666655e-09,
                   1.9347029770362872e-07, 5.4381909514671937e-05,
                   2.3249242149461664e-07, 1.0259086203309483e-11,
                   1.3279560878153812e-09, 5.700248342774415e-06,
                   4.525497622087444e-05, 5.077461157461439e-09,
                   2.0994843972543824e-10, 1.3670406599832239e-09,
                   2.2228415346747686e-08, 6.248143392112235e-09,
                   4.5502818053496354e-10, 2.9956999056949398e-05,
                   6.993191101340745e-10, 8.980855354737754e-11,
                   2.410359886092142e-05, 3.473358739244134e-05,
                   9.599334183708257e-09, 2.1972798061274223e-09,
                   1.7959762808048445e-06, 1.733425682871344e-08,
                   3.106349945868719e-05, 4.075580111226552e-06,
                   7.483022550449156e-10, 5.592439243394047e-07,
                   1.508259669885357e-08, 1.602213015890856e-07,
                   1.3977937809272484e-08, 1.892317089364725e-11,
                   2.7220234685223525e-06, 4.103253165296156e-05,
                   1.6011112404454576e-05, 1.097547993115412e-05,
                   4.773618343964794e-05, 2.9301717706458693e-05,
                   9.829947327032185e-08, 3.4440671198672665e-09,
                   3.010512457872699e-10, 5.306302491212664e-10,
                   1.0982941060267227e-07, 2.966815873257039e-11,
                   4.514680377261245e-10, 2.7290978810263812e-11,
                   4.366625220111639e-06, 2.1578611055408803e-09,
                   9.536189992056047e-08, 6.907394130003957e-11,
                   1.959655662411739e-08, 1.993325457391124e-05,
                   2.187164551383307e-06, 6.47525095309801e-05,
                   5.3568357710339986e-05, 3.9050302355871914e-05,
                   2.5644689024976406e-10, 1.2448587865551415e-10,
                   5.464300623455601e-09, 7.234057795634853e-09,
                   1.059309673016846e-05, 3.62873195773295e-11,
                   1.4244585876966275e-10, 2.7389615082955235e-11,
                   4.112436851010605e-09, 2.875337709854889e-05,
                   1.1107757294433012e-10, 4.880624798406301e-07,
                   1.3728568089188036e-07, 1.26493720856875e-08,
                   1.517531175431532e-07, 3.8314556176597093e-10,
                   1.0293445872788762e-07, 8.090934426445765e-09,
                   1.2234264236629898e-05, 1.7856082703456503e-08,
                   9.156243036356402e-09, 1.779588006728099e-05,
                   3.405697368902627e-10, 1.826521939680308e-05,
                   1.604231940066618e-10, 1.7098272718090147e-10,
                   2.6435629541706532e-11, 6.430256656829861e-07,
                   2.2131002837990954e-06, 5.1914953108742993e-11,
                   6.430545414369241e-10, 2.6379304870278253e-05,
                   9.49671185858454e-10, 3.683060929728451e-05,
                   6.550916143981555e-07, 1.7964799753870532e-06,
                   1.8934024374176717e-07, 4.731516718816907e-07,
                   7.267379210330308e-11, 9.153351698682493e-06,
                   1.2096335454169934e-07, 6.999298259245735e-09,
                   1.3428837951111415e-09, 2.2196672449979025e-08,
                   2.4065179527702734e-07, 6.890806460075208e-06,
                   1.8517778797474384e-10, 1.4302706653487507e-08,
                   4.911041849950184e-05, 4.297836120440084e-06,
                   1.2248432373038728e-07, 1.262327153494666e-08,
                   1.787500514718422e-11, 3.120644556227208e-09,
                   2.0139534460930357e-11, 2.3737662931621974e-08,
                   2.0030972107511354e-08, 2.6263544392334355e-08,
                   1.589216741882255e-06, 1.169228483405506e-09],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_clf__warm_start': masked_array(data=[False, True, False, True, False, True, False, True,
                   False, True, True, True, True, True, True, True, False,
                   False, True, True, False, False, False, False, True,
                   True, False, True, True, True, True, False, True,
                   False, False, False, True, False, False, True, False,
                   True, False, False, True, False, False, False, False,
                   False, False, False, True, True, False, True, False,
                   False, True, True, True, True, False, False, False,
                   True, False, False, True, False, False, False, False,
                   False, False, True, False, False, True, True, True,
                   False, True, True, True, True, False, True, False,
                   True, True, False, False, True, True, False, False,
                   True, True, False, False, False, True, True, True,
                   False, True, False, True, False, True, True, True,
                   False, False, True, True, True, True, False, False,
                   False, True, True, True, False, False, False, False,
                   True, False, False, False, True, False, True, False,
                   True, False, True, False, True, True, True, False,
                   True, False, True, False, False, False, False, False,
                   True, False, True, True, False, False, True, False,
                   True, True, True, True, True, False, False, True, True,
                   True, False, True, True, True, True, False, False,
                   True, False, False, False, False, True, False, False,
                   True, False, False, False, False, True, False, False,
                   False, False, False, True, False, True],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__max_df': masked_array(data=[0.8555555555555556, 0.9, 0.5888888888888889,
                   0.6777777777777778, 0.8555555555555556,
                   0.8111111111111111, 0.6777777777777778,
                   0.7666666666666666, 0.6777777777777778,
                   0.7666666666666666, 0.5888888888888889,
                   0.7666666666666666, 0.9, 0.5444444444444444, 0.5,
                   0.7666666666666666, 0.7666666666666666,
                   0.5888888888888889, 0.8111111111111111,
                   0.5444444444444444, 0.6777777777777778,
                   0.5444444444444444, 0.9, 0.7222222222222222,
                   0.8111111111111111, 0.6777777777777778,
                   0.5444444444444444, 0.5444444444444444, 0.9,
                   0.5444444444444444, 0.5444444444444444,
                   0.5444444444444444, 0.5, 0.5888888888888889, 0.5,
                   0.8555555555555556, 0.7222222222222222,
                   0.6777777777777778, 0.9, 0.7222222222222222,
                   0.6777777777777778, 0.5888888888888889,
                   0.5888888888888889, 0.9, 0.6777777777777778,
                   0.8555555555555556, 0.6777777777777778,
                   0.8111111111111111, 0.9, 0.5, 0.6777777777777778,
                   0.7222222222222222, 0.8555555555555556, 0.5,
                   0.6333333333333333, 0.5888888888888889, 0.9,
                   0.5444444444444444, 0.6777777777777778,
                   0.6777777777777778, 0.5, 0.9, 0.8555555555555556,
                   0.5888888888888889, 0.8555555555555556, 0.9,
                   0.6777777777777778, 0.7666666666666666, 0.9,
                   0.8555555555555556, 0.6333333333333333,
                   0.6777777777777778, 0.6777777777777778,
                   0.5888888888888889, 0.6777777777777778,
                   0.6333333333333333, 0.8111111111111111,
                   0.5888888888888889, 0.5, 0.5, 0.5, 0.6333333333333333,
                   0.7222222222222222, 0.8111111111111111, 0.5,
                   0.7222222222222222, 0.6333333333333333,
                   0.5888888888888889, 0.5888888888888889,
                   0.6333333333333333, 0.7222222222222222,
                   0.5444444444444444, 0.8111111111111111,
                   0.6777777777777778, 0.8555555555555556,
                   0.5444444444444444, 0.9, 0.5888888888888889,
                   0.6777777777777778, 0.5888888888888889, 0.9,
                   0.7666666666666666, 0.6333333333333333,
                   0.8111111111111111, 0.9, 0.6777777777777778,
                   0.7666666666666666, 0.6777777777777778, 0.9,
                   0.5444444444444444, 0.8111111111111111,
                   0.7222222222222222, 0.5, 0.7666666666666666,
                   0.6333333333333333, 0.8555555555555556,
                   0.5888888888888889, 0.9, 0.5888888888888889,
                   0.8555555555555556, 0.8555555555555556,
                   0.6777777777777778, 0.8555555555555556,
                   0.5444444444444444, 0.7222222222222222,
                   0.5444444444444444, 0.5888888888888889,
                   0.7222222222222222, 0.5888888888888889,
                   0.5444444444444444, 0.7666666666666666, 0.9,
                   0.5888888888888889, 0.7666666666666666,
                   0.7222222222222222, 0.8111111111111111,
                   0.5888888888888889, 0.9, 0.9, 0.5444444444444444,
                   0.6333333333333333, 0.8555555555555556,
                   0.6333333333333333, 0.6333333333333333,
                   0.8555555555555556, 0.7666666666666666,
                   0.5888888888888889, 0.5888888888888889,
                   0.5888888888888889, 0.7666666666666666, 0.5, 0.9, 0.9,
                   0.7666666666666666, 0.7666666666666666,
                   0.5888888888888889, 0.5888888888888889,
                   0.8111111111111111, 0.6333333333333333,
                   0.7222222222222222, 0.5, 0.5, 0.8555555555555556,
                   0.8555555555555556, 0.7222222222222222,
                   0.5888888888888889, 0.8111111111111111, 0.9,
                   0.6333333333333333, 0.6777777777777778,
                   0.6333333333333333, 0.5, 0.5888888888888889, 0.9,
                   0.5444444444444444, 0.5888888888888889,
                   0.6333333333333333, 0.8111111111111111,
                   0.7666666666666666, 0.7666666666666666,
                   0.7222222222222222, 0.7666666666666666,
                   0.5888888888888889, 0.5, 0.8555555555555556,
                   0.5888888888888889, 0.7666666666666666, 0.5,
                   0.6777777777777778, 0.7222222222222222,
                   0.6777777777777778, 0.8555555555555556, 0.9,
                   0.8555555555555556, 0.7666666666666666,
                   0.7222222222222222, 0.7666666666666666,
                   0.6777777777777778, 0.7666666666666666, 0.5],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__min_df': masked_array(data=[0.00215046608945051, 0.00311494499279615,
                   0.006261831652780371, 0.000756720109951776,
                   0.0005811896694830962, 0.0021381074017508663,
                   0.0006446452587662785, 0.0001343133814011733,
                   0.0033625482736070475, 0.000600043457712569,
                   0.0006622153849652698, 0.000902167610146743,
                   0.0001804906945277123, 0.0002662942452090526,
                   0.0005049303013867839, 0.00013761599634175975,
                   0.0009768472704915498, 0.004155998609437994,
                   0.0005193438971923042, 0.006704464558024619,
                   0.0005576880150315233, 0.0013254320814888906,
                   0.00032378706456621654, 0.005877548412391748,
                   0.009914533830991426, 0.00018193340769795895,
                   0.0002980259321145783, 0.0002903322055109804,
                   0.003468292636533338, 0.004891224284324468,
                   0.004144533153337694, 0.0003540632250216953,
                   0.006202983626685755, 0.0019670646285719112,
                   0.0003142168401644961, 0.0002677797825735558,
                   0.0037939192083685236, 0.001100262978310997,
                   0.001322738117334956, 0.0003304298906859191,
                   0.00558457527004732, 0.003098706203651599,
                   0.0009458024967353767, 0.0011551988559692656,
                   0.000613497602118854, 0.0008144453600365933,
                   0.00013177442487351934, 0.0001733380785463725,
                   0.004930283035274927, 0.0002624789166957516,
                   0.0006807491702613353, 0.00015759229699064477,
                   0.00797696259488035, 0.0003409685853596603,
                   0.00010489404472121024, 0.00026582974662019864,
                   0.004837956732702185, 0.00022241800683825945,
                   0.0007106977699190297, 0.007268049338579687,
                   0.00020852184319642564, 0.007310682239195318,
                   0.00017016005796377802, 0.0006087475725066797,
                   0.002498691312039079, 0.0008325514199389243,
                   0.00014198597640143075, 0.00016737126015818065,
                   0.005654260833659101, 0.0007828610028393089,
                   0.0009475859377736292, 0.007836947094486535,
                   0.00035648858003553194, 0.0012380810373863794,
                   0.0007774308271543573, 0.003559872394397703,
                   0.0030604130624172065, 0.0006253644093024792,
                   0.0053264439290965455, 0.007789395807340003,
                   0.00095754509127652, 0.00010044361500538904,
                   0.00010660746734362196, 0.00020073867003033504,
                   0.003952398399863727, 0.001004772788896272,
                   0.0014121780007264894, 0.0034665065427295604,
                   0.00012435631990135709, 0.000623509533663267,
                   0.00013049053261970017, 0.0004169312664260687,
                   0.00834484511288313, 0.0028393174147300537,
                   0.004582952633388486, 0.009984842893246854,
                   0.00037925690252078463, 0.009877197935120765,
                   0.0009640067486561704, 0.0008670625248183635,
                   0.0005154396645030494, 0.00020612226840744486,
                   0.005562120475997102, 0.0001531247587364112,
                   0.0014748965377752062, 0.0007794766334488078,
                   0.0012547759628232327, 0.0005436420659988156,
                   0.0003536113951295941, 0.000668818188366674,
                   0.000359876254676018, 0.00456226895478952,
                   0.00026492632946140983, 0.008724788071008486,
                   0.006421563615560976, 0.0033895420409002356,
                   0.007852088061976436, 0.0028616200848695385,
                   0.00280985088178852, 0.0007521999393552012,
                   0.00012550831957998924, 0.0075400715784473635,
                   0.0004276092132716362, 0.0002112729159497889,
                   0.0012139171558587587, 0.0016004437925785542,
                   0.0005197828479897627, 0.0005507923606356461,
                   0.0003884547904767773, 0.0008233259970979053,
                   0.005764273274039547, 0.0014196254679019577,
                   0.004261995316555253, 0.0033678681471348555,
                   0.0014439880023830547, 0.00021529504555101525,
                   0.002292194363480189, 0.001742119421741867,
                   0.000723314693738386, 0.004824623160378506,
                   0.0028524617959400835, 0.0001137838299495012,
                   0.0010949714644642005, 0.009593441000109084,
                   0.00015289257983365704, 0.0009888222553976565,
                   0.003675642136017367, 0.004557628229756293,
                   0.0016181568257648445, 0.00035474377072919165,
                   0.0003771879914818769, 0.00012730027531594404,
                   0.005450401591620373, 0.004578998749754158,
                   0.0035457677599633245, 0.000745762965509368,
                   0.000154762090435772, 0.00022576494475736407,
                   0.00018913430767030322, 0.0007318542414570752,
                   0.0007128208976743939, 0.00013201179040629436,
                   0.000533256958006117, 0.0003230094666635848,
                   0.00014121260096183004, 0.0053028818423710615,
                   0.0072721571572191964, 0.00012379605150375576,
                   0.0010066059743619924, 0.0060762533417098915,
                   0.00731118761679582, 0.0009798472806555605,
                   0.00143571510675761, 0.000115883090073023,
                   0.004787347931671966, 0.00011785352821646797,
                   0.000828057346323723, 0.003040365796440122,
                   0.001621591227779839, 0.007379946748726539,
                   0.0008156513846352992, 0.002800807026045999,
                   0.0029955284619405014, 0.002676728531801375,
                   0.00656843590588306, 0.00011205738281802232,
                   0.00071522757129328, 0.007424195002339269,
                   0.0001056478362953588, 0.0018764242909797891,
                   0.000604713896966642, 0.0010278952884891811,
                   0.0028903555982143945, 0.00013766019164057855,
                   0.0005467713626114698, 0.005354220221332768,
                   0.0014526070791620726, 0.00030211414571605855,
                   0.0007514797991924043, 0.0037303532957926964],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__ngram_range': masked_array(data=[(1, 1), (1, 2), (1, 2), (1, 2), (1, 2), (1, 2), (1, 1),
                   (1, 2), (1, 2), (1, 2), (1, 2), (1, 1), (1, 1), (1, 1),
                   (1, 2), (1, 2), (1, 1), (1, 2), (1, 2), (1, 1), (1, 1),
                   (1, 1), (1, 2), (1, 2), (1, 1), (1, 1), (1, 2), (1, 2),
                   (1, 2), (1, 2), (1, 1), (1, 1), (1, 2), (1, 2), (1, 1),
                   (1, 2), (1, 2), (1, 1), (1, 2), (1, 1), (1, 2), (1, 2),
                   (1, 2), (1, 2), (1, 1), (1, 1), (1, 1), (1, 2), (1, 1),
                   (1, 2), (1, 1), (1, 2), (1, 1), (1, 2), (1, 2), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 1), (1, 2), (1, 2), (1, 2),
                   (1, 2), (1, 1), (1, 2), (1, 2), (1, 1), (1, 1), (1, 1),
                   (1, 2), (1, 1), (1, 1), (1, 2), (1, 1), (1, 1), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 2), (1, 2),
                   (1, 2), (1, 1), (1, 2), (1, 1), (1, 1), (1, 2), (1, 1),
                   (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1),
                   (1, 2), (1, 2), (1, 1), (1, 2), (1, 2), (1, 1), (1, 1),
                   (1, 2), (1, 2), (1, 2), (1, 2), (1, 2), (1, 1), (1, 1),
                   (1, 2), (1, 2), (1, 2), (1, 1), (1, 2), (1, 2), (1, 1),
                   (1, 2), (1, 2), (1, 1), (1, 2), (1, 2), (1, 1), (1, 1),
                   (1, 2), (1, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1),
                   (1, 2), (1, 1), (1, 2), (1, 1), (1, 1), (1, 1), (1, 2),
                   (1, 2), (1, 2), (1, 1), (1, 2), (1, 2), (1, 1), (1, 1),
                   (1, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1),
                   (1, 2), (1, 1), (1, 2), (1, 1), (1, 2), (1, 1), (1, 2),
                   (1, 1), (1, 2), (1, 2), (1, 2), (1, 2), (1, 1), (1, 2),
                   (1, 2), (1, 2), (1, 2), (1, 2), (1, 2), (1, 1), (1, 2),
                   (1, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1),
                   (1, 1), (1, 2), (1, 2), (1, 1), (1, 2), (1, 2), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 2), (1, 2), (1, 1), (1, 2),
                   (1, 1), (1, 1), (1, 1), (1, 2)],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__stop_words': masked_array(data=[None, None, 'english', None, None, None, 'english',
                   'english', 'english', None, 'english', None, None,
                   'english', None, 'english', 'english', 'english',
                   'english', None, 'english', None, None, None,
                   'english', None, 'english', 'english', 'english',
                   'english', 'english', 'english', 'english', 'english',
                   'english', 'english', None, 'english', None, None,
                   None, 'english', 'english', None, None, 'english',
                   None, None, 'english', None, 'english', None, None,
                   'english', None, 'english', None, None, None, None,
                   'english', 'english', None, None, 'english', None,
                   None, None, None, None, None, 'english', 'english',
                   'english', None, 'english', 'english', 'english', None,
                   'english', None, None, 'english', 'english', 'english',
                   'english', 'english', None, 'english', 'english',
                   'english', 'english', 'english', 'english', 'english',
                   'english', 'english', 'english', None, 'english', None,
                   'english', 'english', 'english', None, 'english',
                   'english', None, 'english', 'english', 'english', None,
                   'english', 'english', None, None, None, None, None,
                   'english', 'english', None, 'english', 'english', None,
                   None, 'english', 'english', 'english', 'english',
                   'english', None, None, None, 'english', 'english',
                   'english', None, None, 'english', None, 'english',
                   None, None, None, 'english', None, None, 'english',
                   'english', None, None, 'english', None, None,
                   'english', None, 'english', 'english', 'english',
                   'english', 'english', None, 'english', 'english',
                   'english', None, None, None, 'english', None,
                   'english', None, 'english', None, 'english', None,
                   'english', None, 'english', 'english', 'english',
                   'english', 'english', 'english', None, None, None,
                   None, None, 'english', 'english', None, 'english',
                   None, 'english', 'english', None, 'english', None],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_vect__token_pattern': masked_array(data=['\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{1,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{1,}',
                   '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{1,}',
                   '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}',
                   '\\w{2,}', '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}',
                   '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{1,}', '\\w{1,}',
                   '\\w{2,}', '\\w{1,}', '\\w{1,}', '\\w{2,}', '\\w{2,}',
                   '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{2,}', '\\w{1,}'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'clf__C': 0.42022513971567677, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.9464318162100379, 'clf__max_iter': 172, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 8.438354474773041e-11, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.00215046608945051, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.11386212788439731, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5384469259504413, 'clf__max_iter': 132, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 3.6556636094985813e-07, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.00311494499279615, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 544.2201101402593, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.19458940778584477, 'clf__max_iter': 61, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 6.662172818431862e-09, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.006261831652780371, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.787159228486243, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.16135751118800512, 'clf__max_iter': 180, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'lbfgs', 'clf__tol': 1.1489057059138324e-08, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.000756720109951776, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.002989946869777147, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.3241995429728465, 'clf__max_iter': 66, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'liblinear', 'clf__tol': 1.521537002396315e-08, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0005811896694830962, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 10.372533968435413, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5877437149499078, 'clf__max_iter': 184, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'liblinear', 'clf__tol': 7.179355964127938e-10, 'clf__warm_start': True, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0021381074017508663, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 12.241881349474871, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5636640266419972, 'clf__max_iter': 138, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 1.6772695450992417e-09, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0006446452587662785, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.07179105123958829, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.515722616866515, 'clf__max_iter': 194, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 3.3731789044412045e-09, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0001343133814011733, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 8.76678863113127, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5366299985988323, 'clf__max_iter': 182, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'lbfgs', 'clf__tol': 9.559157017808572e-10, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0033625482736070475, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.002111525210549778, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.45580594709520805, 'clf__max_iter': 162, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 1.9628541384539257e-07, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.000600043457712569, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0027495803127620968, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.9831536861583402, 'clf__max_iter': 153, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 2.637705965449986e-10, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0006622153849652698, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 113.06786961713446, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6003664926291193, 'clf__max_iter': 143, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 1.7167156471938707e-10, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.000902167610146743, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.005781224110179707, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6517383348245195, 'clf__max_iter': 196, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'lbfgs', 'clf__tol': 1.2363836370689449e-11, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.0001804906945277123, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.47516979659091674, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5306209525422895, 'clf__max_iter': 145, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 9.146701598311042e-11, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0002662942452090526, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.5223263967705, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.005558950227423143, 'clf__max_iter': 70, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'lbfgs', 'clf__tol': 1.101548493811732e-10, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.0005049303013867839, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.20214329469642417, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.49730930083042035, 'clf__max_iter': 111, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 9.804197193951465e-06, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00013761599634175975, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.010192292881755625, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6206957032883181, 'clf__max_iter': 117, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 5.9519333381933545e-09, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0009768472704915498, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.005369096127786736, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7684136276457924, 'clf__max_iter': 89, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 2.129348014158844e-05, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.004155998609437994, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 206.89240292080746, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6826067676439019, 'clf__max_iter': 111, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 3.1109013310562836e-06, 'clf__warm_start': True, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0005193438971923042, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 35.725525784197366, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.48095112750185687, 'clf__max_iter': 143, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 2.8014287807609434e-08, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.006704464558024619, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 27.636325101551694, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.9583722737067599, 'clf__max_iter': 135, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 6.309435804251798e-08, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0005576880150315233, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.048215619829078196, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.43651723506321183, 'clf__max_iter': 134, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 3.8964537796682804e-10, 'clf__warm_start': False, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0013254320814888906, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 529.593706027609, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.2616212361178143, 'clf__max_iter': 129, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'sag', 'clf__tol': 2.3208429779138817e-11, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.00032378706456621654, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 4.557706510404431, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5674858900521303, 'clf__max_iter': 127, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 6.980295816895762e-09, 'clf__warm_start': False, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.005877548412391748, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0010355646599539792, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.9998022681116802, 'clf__max_iter': 118, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 1.6293153523242907e-11, 'clf__warm_start': True, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.009914533830991426, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.0700020986523155, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.52976595780221, 'clf__max_iter': 64, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 8.30393019070527e-05, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00018193340769795895, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.004325957603005501, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7121063723399707, 'clf__max_iter': 52, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 1.1310273619324638e-10, 'clf__warm_start': False, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0002980259321145783, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.3271758138049276, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.09621091034127516, 'clf__max_iter': 73, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 1.1255987946589486e-05, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0002903322055109804, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 839.3132058454073, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5628616441234765, 'clf__max_iter': 91, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'sag', 'clf__tol': 1.9965173921548342e-11, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.003468292636533338, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 25.373085997132918, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6666597833837518, 'clf__max_iter': 63, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 1.3312064001922356e-10, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.004891224284324468, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.3802037916440303, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.8361058430318411, 'clf__max_iter': 167, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 2.1386100770920808e-05, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.004144533153337694, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 12.515371782081077, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.28715007564513184, 'clf__max_iter': 115, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 3.06791797413607e-11, 'clf__warm_start': False, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0003540632250216953, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 714.4162373231242, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6162542763215387, 'clf__max_iter': 191, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 1.303132652566515e-10, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.006202983626685755, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 31.450910600523752, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6555515814254521, 'clf__max_iter': 109, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 6.574209165042156e-07, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0019670646285719112, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 669.9475102990847, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.255341382276708, 'clf__max_iter': 64, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 3.245365322588968e-05, 'clf__warm_start': False, 'vect__max_df': 0.5, 'vect__min_df': 0.0003142168401644961, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 4.30608603247084, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.12469717044894923, 'clf__max_iter': 52, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 3.8750823992458196e-05, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0002677797825735558, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 69.98608011377746, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.3401610836422473, 'clf__max_iter': 173, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 7.379196500342556e-11, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0037939192083685236, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 147.23469943217478, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.47142174526723235, 'clf__max_iter': 154, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'saga', 'clf__tol': 1.0409176469611837e-08, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.001100262978310997, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.005416414992623258, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.41789975727417816, 'clf__max_iter': 196, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'saga', 'clf__tol': 6.975168527499795e-11, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.001322738117334956, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 27.550982802884032, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.17287154632981594, 'clf__max_iter': 173, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 1.3418687867086382e-06, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0003304298906859191, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.014789866904282422, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5135283710339654, 'clf__max_iter': 127, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 5.4874611047872254e-09, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00558457527004732, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.0925830279693312, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.96151675925144, 'clf__max_iter': 163, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 3.511914868853273e-10, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.003098706203651599, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 2.173389075494629, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5156267202630149, 'clf__max_iter': 182, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'saga', 'clf__tol': 1.4179980489746399e-10, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0009458024967353767, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 8.182469575290002, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.05308849212878508, 'clf__max_iter': 126, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 1.590969077389071e-05, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.0011551988559692656, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.015033249355740201, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.40556853843772667, 'clf__max_iter': 84, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 5.055445055164595e-09, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.000613497602118854, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 548.7184214026825, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.9696275825254536, 'clf__max_iter': 191, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 4.583067630815626e-05, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0008144453600365933, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 71.36282513211975, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7564369951858407, 'clf__max_iter': 64, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 4.58703907690095e-10, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00013177442487351934, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0036906854636722807, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5962510326752452, 'clf__max_iter': 148, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 5.0544686585719365e-05, 'clf__warm_start': False, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0001733380785463725, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.37516438511214395, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.8174336959936787, 'clf__max_iter': 121, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'saga', 'clf__tol': 4.168555079007728e-08, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.004930283035274927, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.02226632539694695, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6217225215719309, 'clf__max_iter': 196, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 2.2114861739726267e-07, 'clf__warm_start': False, 'vect__max_df': 0.5, 'vect__min_df': 0.0002624789166957516, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 730.8213899505455, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5167871593008962, 'clf__max_iter': 156, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 2.4031101448687394e-07, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0006807491702613353, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 355.91352852599584, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.31579850896924866, 'clf__max_iter': 184, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 1.9700101379169665e-06, 'clf__warm_start': False, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00015759229699064477, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.001387742870923526, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.15480162223035354, 'clf__max_iter': 56, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'saga', 'clf__tol': 3.6268062344301653e-09, 'clf__warm_start': True, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.00797696259488035, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.002209137141823145, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.020920589112543464, 'clf__max_iter': 116, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 2.8209229004643608e-05, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.0003409685853596603, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.03347329857709512, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5790356826861355, 'clf__max_iter': 57, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 1.2982284932575753e-11, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00010489404472121024, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 154.47987340709025, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.8636573175247232, 'clf__max_iter': 67, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 9.668741369097144e-07, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00026582974662019864, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 132.16141214919782, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5762800130504916, 'clf__max_iter': 145, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 7.568843758429528e-05, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.004837956732702185, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 241.40330607672402, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5498706986610976, 'clf__max_iter': 178, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'liblinear', 'clf__tol': 2.882371399465696e-10, 'clf__warm_start': False, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.00022241800683825945, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.6854997906217491, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.2930064434940891, 'clf__max_iter': 143, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'lbfgs', 'clf__tol': 5.182518210338807e-06, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0007106977699190297, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0550470906678685, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7302455019570131, 'clf__max_iter': 79, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 1.4806740523109172e-06, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.007268049338579687, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 6.643170533716139, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5666533994919801, 'clf__max_iter': 122, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 3.786457320137761e-10, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.00020852184319642564, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.15942879768709267, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6335603724002425, 'clf__max_iter': 84, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 2.2103509641242166e-08, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.007310682239195318, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.45791148697703665, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.49753002033025717, 'clf__max_iter': 103, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 9.759827822351545e-08, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.00017016005796377802, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.5763576235352021, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6837149700694538, 'clf__max_iter': 90, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 4.472797362524292e-08, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0006087475725066797, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 2.915142172634785, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.18069565503242302, 'clf__max_iter': 93, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'lbfgs', 'clf__tol': 2.287943076653069e-11, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.002498691312039079, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 499.2274066728465, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.3014898492123338, 'clf__max_iter': 104, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 4.714281554109203e-09, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.0008325514199389243, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 5.221510938348504, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.11666719790138902, 'clf__max_iter': 126, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 2.0488542918634292e-08, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00014198597640143075, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.013887803854915951, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.11334486251267384, 'clf__max_iter': 116, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'lbfgs', 'clf__tol': 9.018813765461922e-08, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00016737126015818065, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 5.418051460013835, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.2148273278456433, 'clf__max_iter': 99, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 2.4485572321836313e-05, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.005654260833659101, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.27855326774030814, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6009920496439968, 'clf__max_iter': 157, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 7.713371662085023e-10, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0007828610028393089, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.1533854234218028, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6691419881892566, 'clf__max_iter': 193, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 2.7643049665176567e-10, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0009475859377736292, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.011595462753651541, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.3192817441699317, 'clf__max_iter': 90, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 1.2734856436809687e-10, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.007836947094486535, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.955274976418206, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.06985711580940002, 'clf__max_iter': 170, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 4.82371085088603e-10, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00035648858003553194, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0020193849964176887, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.7190712557259193, 'clf__max_iter': 175, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 5.2185492443741716e-11, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0012380810373863794, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 38.63369359554935, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.8508755082701146, 'clf__max_iter': 165, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 3.039511423615304e-10, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0007774308271543573, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.03711592205038168, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.7149964117263518, 'clf__max_iter': 187, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 6.084016695289377e-10, 'clf__warm_start': True, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.003559872394397703, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.012728642972956145, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.3311288151508701, 'clf__max_iter': 80, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 1.0424973753750217e-11, 'clf__warm_start': False, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0030604130624172065, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.08284401200008004, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.702947096555036, 'clf__max_iter': 199, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 1.559538124654345e-09, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0006253644093024792, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.7522790877541579, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.07190585088818557, 'clf__max_iter': 128, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'liblinear', 'clf__tol': 7.475320032976484e-07, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.0053264439290965455, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 76.42146882863648, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.30560621466695126, 'clf__max_iter': 146, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 2.2169316224464377e-07, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.007789395807340003, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 52.99032690973964, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5660751837857886, 'clf__max_iter': 106, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 9.829473195068038e-06, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.00095754509127652, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 26.41958012786089, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6779981348880857, 'clf__max_iter': 174, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 1.7754430843405642e-11, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00010044361500538904, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.12214046296581768, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.39379832384852764, 'clf__max_iter': 117, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 1.9665694103629625e-10, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00010660746734362196, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.009293590759608087, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.31301321568214024, 'clf__max_iter': 84, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'sag', 'clf__tol': 4.4800885947450536e-07, 'clf__warm_start': True, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.00020073867003033504, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.02777303589320978, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6497351645623134, 'clf__max_iter': 162, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 3.9989951286157304e-10, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.003952398399863727, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 50.605733668510744, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.33059375215973874, 'clf__max_iter': 103, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 5.349120896666655e-09, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.001004772788896272, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 175.41569661436313, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.1972888045869221, 'clf__max_iter': 69, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 1.9347029770362872e-07, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0014121780007264894, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 52.15235465963938, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.7852988827919768, 'clf__max_iter': 152, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 5.4381909514671937e-05, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0034665065427295604, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 2.7840190107128384, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5560095577424843, 'clf__max_iter': 52, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 2.3249242149461664e-07, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00012435631990135709, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.04933306783981362, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.3139378627980437, 'clf__max_iter': 189, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 1.0259086203309483e-11, 'clf__warm_start': True, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.000623509533663267, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 37.172072600809166, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.9988641175254434, 'clf__max_iter': 73, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 1.3279560878153812e-09, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00013049053261970017, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 26.45076128497106, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.49705894003351025, 'clf__max_iter': 145, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 5.700248342774415e-06, 'clf__warm_start': False, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0004169312664260687, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0016272521697061695, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.21734679323757977, 'clf__max_iter': 119, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 4.525497622087444e-05, 'clf__warm_start': False, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.00834484511288313, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 814.2314078233737, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5136959331857112, 'clf__max_iter': 170, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 5.077461157461439e-09, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0028393174147300537, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.034435638787789255, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.11795589367773707, 'clf__max_iter': 129, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 2.0994843972543824e-10, 'clf__warm_start': True, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.004582952633388486, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 15.0300484112724, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5117132591148876, 'clf__max_iter': 74, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 1.3670406599832239e-09, 'clf__warm_start': False, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.009984842893246854, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 134.7917347963711, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.3380149576650542, 'clf__max_iter': 153, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 2.2228415346747686e-08, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.00037925690252078463, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.002610536500723534, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5779143750711724, 'clf__max_iter': 198, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 6.248143392112235e-09, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.009877197935120765, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 76.01197022672005, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7610815716782653, 'clf__max_iter': 173, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 4.5502818053496354e-10, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0009640067486561704, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 257.79449537548226, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6657411752062086, 'clf__max_iter': 181, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 2.9956999056949398e-05, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0008670625248183635, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.017608826815094476, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5805813051302707, 'clf__max_iter': 187, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 6.993191101340745e-10, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.0005154396645030494, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 14.714681128283171, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.8148644369078124, 'clf__max_iter': 90, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'saga', 'clf__tol': 8.980855354737754e-11, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00020612226840744486, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 152.0922785568728, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.3924837059197257, 'clf__max_iter': 174, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 2.410359886092142e-05, 'clf__warm_start': True, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.005562120475997102, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0013929102840585241, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.30119665504782966, 'clf__max_iter': 125, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 3.473358739244134e-05, 'clf__warm_start': True, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0001531247587364112, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.24138267686088022, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.9282526710571656, 'clf__max_iter': 115, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 9.599334183708257e-09, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.0014748965377752062, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 29.331289207689988, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.013195139497579333, 'clf__max_iter': 52, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 2.1972798061274223e-09, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0007794766334488078, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 355.04924819443227, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6107423271402239, 'clf__max_iter': 128, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'saga', 'clf__tol': 1.7959762808048445e-06, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0012547759628232327, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 126.18278187992274, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.9804546633636005, 'clf__max_iter': 69, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 1.733425682871344e-08, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0005436420659988156, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 37.4826977622457, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.8767069247518549, 'clf__max_iter': 81, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'liblinear', 'clf__tol': 3.106349945868719e-05, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.0003536113951295941, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.040959210984822934, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.38876094662146155, 'clf__max_iter': 151, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 4.075580111226552e-06, 'clf__warm_start': False, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.000668818188366674, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 40.51146310122291, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.27516113754118876, 'clf__max_iter': 150, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 7.483022550449156e-10, 'clf__warm_start': True, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.000359876254676018, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.06709036299101302, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.4124819183872144, 'clf__max_iter': 101, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 5.592439243394047e-07, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00456226895478952, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.6525764483150497, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.18441605869795763, 'clf__max_iter': 63, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 1.508259669885357e-08, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.00026492632946140983, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.2241251174510239, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6134047391523942, 'clf__max_iter': 76, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 1.602213015890856e-07, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.008724788071008486, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 42.791334994266386, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.627572214204729, 'clf__max_iter': 95, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 1.3977937809272484e-08, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.006421563615560976, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 13.286506669584941, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5074175081097847, 'clf__max_iter': 58, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 1.892317089364725e-11, 'clf__warm_start': True, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0033895420409002356, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0013557450832652096, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.2863787157189215, 'clf__max_iter': 70, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'sag', 'clf__tol': 2.7220234685223525e-06, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.007852088061976436, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.007902094034181593, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6689869003513076, 'clf__max_iter': 186, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 4.103253165296156e-05, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.0028616200848695385, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 18.030224113741138, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6788941669959058, 'clf__max_iter': 197, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 1.6011112404454576e-05, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00280985088178852, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.0158082010981582, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7054474672187933, 'clf__max_iter': 56, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 1.097547993115412e-05, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0007521999393552012, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 19.31347441917811, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.3136941150067475, 'clf__max_iter': 108, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 4.773618343964794e-05, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.00012550831957998924, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 5.732843912741076, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.4394851735981965, 'clf__max_iter': 100, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 2.9301717706458693e-05, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0075400715784473635, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 4.327874265432374, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5281849765437311, 'clf__max_iter': 52, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 9.829947327032185e-08, 'clf__warm_start': True, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0004276092132716362, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 2.612153794094922, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.4241901288884693, 'clf__max_iter': 137, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 3.4440671198672665e-09, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0002112729159497889, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.3750482054448878, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.41881706551983244, 'clf__max_iter': 125, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 3.010512457872699e-10, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0012139171558587587, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0022123295808449497, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5786349324223675, 'clf__max_iter': 59, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 5.306302491212664e-10, 'clf__warm_start': False, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0016004437925785542, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.2584683372053119, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.40987505127580115, 'clf__max_iter': 193, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 1.0982941060267227e-07, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0005197828479897627, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 10.81006443350211, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.3337559740348043, 'clf__max_iter': 135, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'liblinear', 'clf__tol': 2.966815873257039e-11, 'clf__warm_start': False, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0005507923606356461, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0025511831071079612, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6056696227614005, 'clf__max_iter': 90, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'lbfgs', 'clf__tol': 4.514680377261245e-10, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0003884547904767773, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0112968196253259, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.22258541750423066, 'clf__max_iter': 54, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 2.7290978810263812e-11, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.0008233259970979053, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 39.65980167606564, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.824925936432956, 'clf__max_iter': 174, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'lbfgs', 'clf__tol': 4.366625220111639e-06, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.005764273274039547, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 13.366846002873986, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5427042157672516, 'clf__max_iter': 149, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 2.1578611055408803e-09, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.0014196254679019577, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0015090389217364563, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6224380344446186, 'clf__max_iter': 74, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 9.536189992056047e-08, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.004261995316555253, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0060680832352567535, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.3116447158633594, 'clf__max_iter': 199, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 6.907394130003957e-11, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0033678681471348555, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.3873903327133716, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.005188273582226732, 'clf__max_iter': 167, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 1.959655662411739e-08, 'clf__warm_start': False, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0014439880023830547, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 280.3051024066503, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7109405204002682, 'clf__max_iter': 164, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 1.993325457391124e-05, 'clf__warm_start': True, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.00021529504555101525, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.003434717789494673, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.1089348995631545, 'clf__max_iter': 158, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'liblinear', 'clf__tol': 2.187164551383307e-06, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.002292194363480189, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 387.3883834515131, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.4286165399596077, 'clf__max_iter': 154, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'lbfgs', 'clf__tol': 6.47525095309801e-05, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.001742119421741867, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 257.92724894084444, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6328075780738915, 'clf__max_iter': 171, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 5.3568357710339986e-05, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.000723314693738386, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.12006475454937149, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5955615750252052, 'clf__max_iter': 136, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 3.9050302355871914e-05, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.004824623160378506, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 1.5485274688149995, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.7639397049019885, 'clf__max_iter': 70, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 2.5644689024976406e-10, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0028524617959400835, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.09747825687012276, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.09954939757256831, 'clf__max_iter': 137, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 1.2448587865551415e-10, 'clf__warm_start': True, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0001137838299495012, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.3154712338977796, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.1388838774301825, 'clf__max_iter': 136, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 5.464300623455601e-09, 'clf__warm_start': True, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0010949714644642005, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.005603988428347205, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.04503417913187602, 'clf__max_iter': 51, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 7.234057795634853e-09, 'clf__warm_start': True, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.009593441000109084, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.5482198903905837, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.683721192382513, 'clf__max_iter': 78, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 1.059309673016846e-05, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.00015289257983365704, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.9582488183546161, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.7209230442275124, 'clf__max_iter': 135, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 3.62873195773295e-11, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0009888222553976565, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.26198590510675185, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5076836085325456, 'clf__max_iter': 143, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 1.4244585876966275e-10, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.003675642136017367, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 488.8963260251549, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6351252605925016, 'clf__max_iter': 193, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 2.7389615082955235e-11, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.004557628229756293, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 496.681521308716, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.3512983580821665, 'clf__max_iter': 193, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 4.112436851010605e-09, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0016181568257648445, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 120.60624193378436, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5193637133170328, 'clf__max_iter': 55, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 2.875337709854889e-05, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00035474377072919165, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0169714942125131, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7755247871748316, 'clf__max_iter': 114, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'lbfgs', 'clf__tol': 1.1107757294433012e-10, 'clf__warm_start': False, 'vect__max_df': 0.5, 'vect__min_df': 0.0003771879914818769, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 619.3502670529793, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.3449790382076475, 'clf__max_iter': 93, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 4.880624798406301e-07, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.00012730027531594404, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.004114261895435643, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5278905805801809, 'clf__max_iter': 156, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'liblinear', 'clf__tol': 1.3728568089188036e-07, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.005450401591620373, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.29393982369601906, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.39445756790504494, 'clf__max_iter': 84, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'saga', 'clf__tol': 1.26493720856875e-08, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.004578998749754158, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 91.83180943037927, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.4381480506009777, 'clf__max_iter': 183, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 1.517531175431532e-07, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0035457677599633245, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.00575109232015423, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6364390407222937, 'clf__max_iter': 98, 'clf__multi_class': 'auto', 'clf__penalty': 'none', 'clf__solver': 'sag', 'clf__tol': 3.8314556176597093e-10, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.000745762965509368, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.8969359628501872, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.2660321553620638, 'clf__max_iter': 94, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'saga', 'clf__tol': 1.0293445872788762e-07, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.000154762090435772, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.8732136737096668, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.3830462414850886, 'clf__max_iter': 186, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 8.090934426445765e-09, 'clf__warm_start': False, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.00022576494475736407, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 847.4876636340872, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6028829500274754, 'clf__max_iter': 94, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 1.2234264236629898e-05, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00018913430767030322, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 66.16423682050882, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.8196251192819556, 'clf__max_iter': 150, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 1.7856082703456503e-08, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0007318542414570752, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 648.1791935139133, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.8176713524513296, 'clf__max_iter': 154, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 9.156243036356402e-09, 'clf__warm_start': False, 'vect__max_df': 0.5, 'vect__min_df': 0.0007128208976743939, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.025810679832801248, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.32748151916078216, 'clf__max_iter': 194, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 1.779588006728099e-05, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.00013201179040629436, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0276582291584519, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.8774517408654212, 'clf__max_iter': 145, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 3.405697368902627e-10, 'clf__warm_start': True, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.000533256958006117, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 7.5747806398977335, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.40349959002683045, 'clf__max_iter': 138, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'liblinear', 'clf__tol': 1.826521939680308e-05, 'clf__warm_start': True, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0003230094666635848, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.3470562024183906, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5219180191490546, 'clf__max_iter': 173, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'lbfgs', 'clf__tol': 1.604231940066618e-10, 'clf__warm_start': True, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.00014121260096183004, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 158.70834084051052, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.20659663510880533, 'clf__max_iter': 78, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'lbfgs', 'clf__tol': 1.7098272718090147e-10, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0053028818423710615, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.4306069185761351, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.48844349955108946, 'clf__max_iter': 182, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 2.6435629541706532e-11, 'clf__warm_start': False, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.0072721571572191964, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.0037131498831708878, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.4405707372424553, 'clf__max_iter': 147, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'saga', 'clf__tol': 6.430256656829861e-07, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.00012379605150375576, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 515.9642859713593, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.49923796889078065, 'clf__max_iter': 80, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'newton-cg', 'clf__tol': 2.2131002837990954e-06, 'clf__warm_start': True, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.0010066059743619924, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.04259554722622908, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.13298348157266326, 'clf__max_iter': 68, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 5.1914953108742993e-11, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0060762533417098915, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 2.6963860340870536, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6673034734353765, 'clf__max_iter': 198, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'saga', 'clf__tol': 6.430545414369241e-10, 'clf__warm_start': True, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.00731118761679582, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 10.552267290934182, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.1813700531557667, 'clf__max_iter': 142, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 2.6379304870278253e-05, 'clf__warm_start': False, 'vect__max_df': 0.5, 'vect__min_df': 0.0009798472806555605, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 54.694678150955085, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.36888097914032814, 'clf__max_iter': 75, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'lbfgs', 'clf__tol': 9.49671185858454e-10, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00143571510675761, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.001770561358147136, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.014170303959560537, 'clf__max_iter': 113, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 3.683060929728451e-05, 'clf__warm_start': True, 'vect__max_df': 0.9, 'vect__min_df': 0.000115883090073023, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.039169042768167205, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.30284048480212244, 'clf__max_iter': 90, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 6.550916143981555e-07, 'clf__warm_start': True, 'vect__max_df': 0.5444444444444444, 'vect__min_df': 0.004787347931671966, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 116.02107524079953, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.22651039432442754, 'clf__max_iter': 156, 'clf__multi_class': 'auto', 'clf__penalty': 'l1', 'clf__solver': 'lbfgs', 'clf__tol': 1.7964799753870532e-06, 'clf__warm_start': True, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00011785352821646797, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0011836476532055883, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.7812739464388843, 'clf__max_iter': 116, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'lbfgs', 'clf__tol': 1.8934024374176717e-07, 'clf__warm_start': False, 'vect__max_df': 0.6333333333333333, 'vect__min_df': 0.000828057346323723, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 2.9586893179299056, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.8439150994858698, 'clf__max_iter': 111, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'sag', 'clf__tol': 4.731516718816907e-07, 'clf__warm_start': False, 'vect__max_df': 0.8111111111111111, 'vect__min_df': 0.003040365796440122, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.01287649353500343, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.8529155165250641, 'clf__max_iter': 181, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 7.267379210330308e-11, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.001621591227779839, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.16646002158158013, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6335915443335912, 'clf__max_iter': 139, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'newton-cg', 'clf__tol': 9.153351698682493e-06, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.007379946748726539, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.09944767334009781, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.8542606817603025, 'clf__max_iter': 164, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'sag', 'clf__tol': 1.2096335454169934e-07, 'clf__warm_start': False, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0008156513846352992, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 391.73894435869346, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.8271725847221215, 'clf__max_iter': 133, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'sag', 'clf__tol': 6.999298259245735e-09, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.002800807026045999, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 10.705510503160689, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.6147281096177195, 'clf__max_iter': 55, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'liblinear', 'clf__tol': 1.3428837951111415e-09, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.0029955284619405014, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.004591039123804563, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.9430802174975174, 'clf__max_iter': 185, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'saga', 'clf__tol': 2.2196672449979025e-08, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.002676728531801375, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.0900371316376933, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.4524637982764549, 'clf__max_iter': 99, 'clf__multi_class': 'ovr', 'clf__penalty': 'l2', 'clf__solver': 'liblinear', 'clf__tol': 2.4065179527702734e-07, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.00656843590588306, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.04663991287222376, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.017187839158494533, 'clf__max_iter': 131, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l1', 'clf__solver': 'newton-cg', 'clf__tol': 6.890806460075208e-06, 'clf__warm_start': False, 'vect__max_df': 0.5888888888888889, 'vect__min_df': 0.00011205738281802232, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 29.917394015985654, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.22252400124150606, 'clf__max_iter': 133, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 1.8517778797474384e-10, 'clf__warm_start': True, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.00071522757129328, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 0.028447389432324274, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.46980143079820536, 'clf__max_iter': 159, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 1.4302706653487507e-08, 'clf__warm_start': False, 'vect__max_df': 0.5, 'vect__min_df': 0.007424195002339269, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 1.7408665521598012, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.04616795689772757, 'clf__max_iter': 141, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'lbfgs', 'clf__tol': 4.911041849950184e-05, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.0001056478362953588, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 225.08621171019766, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.7557012470813788, 'clf__max_iter': 80, 'clf__multi_class': 'multinomial', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 4.297836120440084e-06, 'clf__warm_start': False, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.0018764242909797891, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 9.730289389220504, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.5206479789512878, 'clf__max_iter': 129, 'clf__multi_class': 'multinomial', 'clf__penalty': 'none', 'clf__solver': 'saga', 'clf__tol': 1.2248432373038728e-07, 'clf__warm_start': False, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.000604713896966642, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 223.19143488378734, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.7314122499203048, 'clf__max_iter': 99, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 1.262327153494666e-08, 'clf__warm_start': True, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.0010278952884891811, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 4.627280315065617, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.9673222371126132, 'clf__max_iter': 59, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'lbfgs', 'clf__tol': 1.787500514718422e-11, 'clf__warm_start': False, 'vect__max_df': 0.9, 'vect__min_df': 0.0028903555982143945, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}, {'clf__C': 2.040914260078157, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.13532604521746328, 'clf__max_iter': 137, 'clf__multi_class': 'ovr', 'clf__penalty': 'l1', 'clf__solver': 'sag', 'clf__tol': 3.120644556227208e-09, 'clf__warm_start': False, 'vect__max_df': 0.8555555555555556, 'vect__min_df': 0.00013766019164057855, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 11.394953216179216, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.24394250103694615, 'clf__max_iter': 161, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 2.0139534460930357e-11, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0005467713626114698, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.012167705054670155, 'clf__dual': True, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.9062060825269972, 'clf__max_iter': 90, 'clf__multi_class': 'auto', 'clf__penalty': 'l2', 'clf__solver': 'saga', 'clf__tol': 2.3737662931621974e-08, 'clf__warm_start': False, 'vect__max_df': 0.7222222222222222, 'vect__min_df': 0.005354220221332768, 'vect__ngram_range': (1, 2), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 610.8381001412969, 'clf__dual': True, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.5343212944843139, 'clf__max_iter': 175, 'clf__multi_class': 'ovr', 'clf__penalty': 'none', 'clf__solver': 'sag', 'clf__tol': 2.0030972107511354e-08, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0014526070791620726, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.0020541544827901445, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.12434030949967445, 'clf__max_iter': 89, 'clf__multi_class': 'ovr', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 2.6263544392334355e-08, 'clf__warm_start': True, 'vect__max_df': 0.6777777777777778, 'vect__min_df': 0.00030211414571605855, 'vect__ngram_range': (1, 1), 'vect__stop_words': None, 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 0.004846466996189048, 'clf__dual': False, 'clf__fit_intercept': True, 'clf__l1_ratio': 0.09884029909297876, 'clf__max_iter': 172, 'clf__multi_class': 'multinomial', 'clf__penalty': 'elasticnet', 'clf__solver': 'sag', 'clf__tol': 1.589216741882255e-06, 'clf__warm_start': False, 'vect__max_df': 0.7666666666666666, 'vect__min_df': 0.0007514797991924043, 'vect__ngram_range': (1, 1), 'vect__stop_words': 'english', 'vect__token_pattern': '\\w{2,}'}, {'clf__C': 4.294175918532423, 'clf__dual': False, 'clf__fit_intercept': False, 'clf__l1_ratio': 0.6785884885394604, 'clf__max_iter': 122, 'clf__multi_class': 'auto', 'clf__penalty': 'elasticnet', 'clf__solver': 'newton-cg', 'clf__tol': 1.169228483405506e-09, 'clf__warm_start': True, 'vect__max_df': 0.5, 'vect__min_df': 0.0037303532957926964, 'vect__ngram_range': (1, 2), 'vect__stop_words': None, 'vect__token_pattern': '\\w{1,}'}], 'split0_test_score': array([       nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan, 0.58638975,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.70879364,        nan, 0.58992488,        nan, 0.59522757,
       0.72160848,        nan, 0.73309766,        nan, 0.46045073,
              nan, 0.64074238,        nan,        nan,        nan,
              nan, 0.73398144,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.50817499,        nan,        nan,        nan, 0.55634114,
              nan,        nan,        nan,        nan, 0.56296951,
       0.70879364,        nan, 0.04242156,        nan, 0.76182059,
              nan, 0.63057888,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.71984092, 0.74988953,        nan,        nan,        nan,
              nan,        nan, 0.73707468,        nan,        nan,
       0.61157755, 0.58285462,        nan,        nan,        nan,
       0.71188688, 0.72823685,        nan,        nan, 0.59832081,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.72293416,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.66416262,
       0.72956253, 0.70349094,        nan,        nan, 0.09102961,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.6243924 ,        nan,        nan,        nan,
              nan, 0.69509501,        nan,        nan,        nan,
       0.60008838,        nan, 0.61820592, 0.05258506,        nan,
              nan,        nan,        nan,        nan, 0.63278833,
              nan,        nan,        nan,        nan,        nan,
       0.69332744,        nan, 0.64427751,        nan,        nan,
              nan, 0.73000442,        nan,        nan,        nan,
       0.7158639 ,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.62483429, 0.74900574,        nan,        nan,
              nan,        nan,        nan,        nan, 0.56164384,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.65797614, 0.63897481,        nan, 0.65620857,
              nan,        nan,        nan,        nan, 0.67786125,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan]), 'split1_test_score': array([       nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan, 0.56120194,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.6955369 ,        nan, 0.57136544,        nan, 0.60053027,
       0.71542201,        nan, 0.72646929,        nan, 0.45117101,
              nan, 0.63102077,        nan,        nan,        nan,
              nan, 0.73000442,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.49182501,        nan,        nan,        nan, 0.53999116,
              nan,        nan,        nan,        nan, 0.56296951,
       0.70525851,        nan, 0.04242156,        nan, 0.76403005,
              nan, 0.62836942,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.72337605, 0.75386655,        nan,        nan,        nan,
              nan,        nan, 0.72381794,        nan,        nan,
       0.58815731, 0.5634114 ,        nan,        nan,        nan,
       0.71188688, 0.71984092,        nan,        nan, 0.58152894,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.72381794,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.64869642,
       0.71498011, 0.69332744,        nan,        nan, 0.08307556,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.61246133,        nan,        nan,        nan,
              nan, 0.68095449,        nan,        nan,        nan,
       0.59434379,        nan, 0.60583297, 0.05302696,        nan,
              nan,        nan,        nan,        nan, 0.6142289 ,
              nan,        nan,        nan,        nan,        nan,
       0.68714096,        nan, 0.64648696,        nan,        nan,
              nan, 0.73442333,        nan,        nan,        nan,
       0.71100309,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.6089262 , 0.7463544 ,        nan,        nan,
              nan,        nan,        nan,        nan, 0.55634114,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.64737075, 0.63897481,        nan, 0.63102077,
              nan,        nan,        nan,        nan, 0.68802475,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan]), 'split2_test_score': array([       nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan, 0.61378701,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.71409633,        nan, 0.5992046 ,        nan, 0.6243924 ,
       0.72956253,        nan, 0.74768007,        nan, 0.47812638,
              nan, 0.65090588,        nan,        nan,        nan,
              nan, 0.74326116,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.51524525,        nan,        nan,        nan, 0.57180734,
              nan,        nan,        nan,        nan, 0.58152894,
       0.71277066,        nan, 0.04242156,        nan, 0.77330977,
              nan, 0.6345559 ,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.73795846, 0.76447194,        nan,        nan,        nan,
              nan,        nan, 0.74591251,        nan,        nan,
       0.61378701, 0.59125055,        nan,        nan,        nan,
       0.71984092, 0.73000442,        nan,        nan, 0.6142289 ,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.72912064,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.6699072 ,
       0.73530711, 0.71144498,        nan,        nan, 0.10296067,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.63367212,        nan,        nan,        nan,
              nan, 0.70879364,        nan,        nan,        nan,
       0.62792753,        nan, 0.61290323, 0.05302696,        nan,
              nan,        nan,        nan,        nan, 0.63411401,
              nan,        nan,        nan,        nan,        nan,
       0.69730446,        nan, 0.65355722,        nan,        nan,
              nan, 0.74193548,        nan,        nan,        nan,
       0.7158639 ,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.63190455, 0.76093681,        nan,        nan,
              nan,        nan,        nan,        nan, 0.57269112,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.66946531, 0.6447194 ,        nan, 0.65709236,
              nan,        nan,        nan,        nan, 0.69509501,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan]), 'split3_test_score': array([       nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan, 0.60318162,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.71409633,        nan, 0.58948299,        nan, 0.61555457,
       0.72381794,        nan, 0.73707468,        nan, 0.4821034 ,
              nan, 0.64648696,        nan,        nan,        nan,
              nan, 0.73884224,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.51612903,        nan,        nan,        nan, 0.56606275,
              nan,        nan,        nan,        nan, 0.57799381,
       0.71365444,        nan, 0.04242156,        nan, 0.75607601,
              nan, 0.63323023,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.72514361, 0.75342466,        nan,        nan,        nan,
              nan,        nan, 0.7410517 ,        nan,        nan,
       0.60583297, 0.58992488,        nan,        nan,        nan,
       0.7207247 , 0.73795846,        nan,        nan, 0.61069377,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.72249227,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.66769775,
       0.73486522, 0.70437472,        nan,        nan, 0.09721608,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.62350862,        nan,        nan,        nan,
              nan, 0.70790985,        nan,        nan,        nan,
       0.58992488,        nan, 0.61864781, 0.05302696,        nan,
              nan,        nan,        nan,        nan, 0.63853292,
              nan,        nan,        nan,        nan,        nan,
       0.69421122,        nan, 0.64162616,        nan,        nan,
              nan, 0.73972603,        nan,        nan,        nan,
       0.71498011,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.63985859, 0.74768007,        nan,        nan,
              nan,        nan,        nan,        nan, 0.57048166,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.66151127, 0.64648696,        nan, 0.65576668,
              nan,        nan,        nan,        nan, 0.69155988,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan]), 'split4_test_score': array([       nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan, 0.6025641 ,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.70733864,        nan, 0.59195402,        nan, 0.61052166,
       0.73607427,        nan, 0.7382847 ,        nan, 0.48143236,
              nan, 0.64942529,        nan,        nan,        nan,
              nan, 0.74226348,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.50486295,        nan,        nan,        nan, 0.55260831,
              nan,        nan,        nan,        nan, 0.57382847,
       0.72104332,        nan, 0.04244032,        nan, 0.76525199,
              nan, 0.63306808,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.72148541, 0.76304156,        nan,        nan,        nan,
              nan,        nan, 0.74137931,        nan,        nan,
       0.60079576, 0.58045977,        nan,        nan,        nan,
       0.72634836, 0.74005305,        nan,        nan, 0.60654288,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.73607427,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.66931919,
       0.73872679, 0.71883289,        nan,        nan, 0.0893015 ,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.6357206 ,        nan,        nan,        nan,
              nan, 0.69584439,        nan,        nan,        nan,
       0.61184792,        nan, 0.60344828, 0.0530504 ,        nan,
              nan,        nan,        nan,        nan, 0.63041556,
              nan,        nan,        nan,        nan,        nan,
       0.70247569,        nan, 0.64456233,        nan,        nan,
              nan, 0.74358974,        nan,        nan,        nan,
       0.72281167,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.62864721, 0.75862069,        nan,        nan,
              nan,        nan,        nan,        nan, 0.56808134,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.66136163, 0.65207781,        nan, 0.64942529,
              nan,        nan,        nan,        nan, 0.69363395,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan]), 'mean_test_score': array([       nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan, 0.59342488,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.70797237,        nan, 0.58838639,        nan, 0.6092453 ,
       0.72529705,        nan, 0.73652128,        nan, 0.47065678,
              nan, 0.64371625,        nan,        nan,        nan,
              nan, 0.73767055,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.50724745,        nan,        nan,        nan, 0.55736214,
              nan,        nan,        nan,        nan, 0.57185805,
       0.71230411,        nan, 0.04242532,        nan, 0.76409768,
              nan, 0.6319605 ,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
       0.72556089, 0.75693885,        nan,        nan,        nan,
              nan,        nan, 0.73784723,        nan,        nan,
       0.60403012, 0.58158024,        nan,        nan,        nan,
       0.71813755, 0.73121874,        nan,        nan, 0.60226306,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.72688785,        nan,        nan,        nan,
              nan,        nan,        nan,        nan, 0.66395663,
       0.73068835, 0.7062942 ,        nan,        nan, 0.09271669,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.62595101,        nan,        nan,        nan,
              nan, 0.69771947,        nan,        nan,        nan,
       0.6048265 ,        nan, 0.61180764, 0.05294327,        nan,
              nan,        nan,        nan,        nan, 0.63001594,
              nan,        nan,        nan,        nan,        nan,
       0.69489196,        nan, 0.64610204,        nan,        nan,
              nan, 0.7379358 ,        nan,        nan,        nan,
       0.71610453,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.62683417, 0.75251954,        nan,        nan,
              nan,        nan,        nan,        nan, 0.56584782,
              nan,        nan,        nan,        nan,        nan,
              nan, 0.65953702, 0.64424676,        nan, 0.64990273,
              nan,        nan,        nan,        nan, 0.68923497,
              nan,        nan,        nan,        nan,        nan,
              nan,        nan,        nan,        nan,        nan]), 'std_test_score': array([           nan,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan,
       1.83365550e-02,            nan,            nan,            nan,
                  nan,            nan,            nan, 6.79298004e-03,
                  nan, 9.19830039e-03,            nan, 1.04241935e-02,
       7.03779161e-03,            nan, 6.93827420e-03,            nan,
       1.25442567e-02,            nan, 7.23850623e-03,            nan,
                  nan,            nan,            nan, 5.02198960e-03,
                  nan,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan,
       8.80051226e-03,            nan,            nan,            nan,
       1.10431559e-02,            nan,            nan,            nan,
                  nan, 7.65596034e-03, 5.29865801e-03,            nan,
       7.50160288e-06,            nan, 5.58089461e-03,            nan,
       2.20815598e-03,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan,
                  nan, 6.44941917e-03, 5.75277327e-03,            nan,
                  nan,            nan,            nan,            nan,
       7.55262454e-03,            nan,            nan, 9.14131231e-03,
       9.96126641e-03,            nan,            nan,            nan,
       5.57053223e-03, 7.25658218e-03,            nan,            nan,
       1.16449125e-02,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan,
       5.17209493e-03,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan,
       7.88769548e-03, 8.38345878e-03, 8.52559482e-03,            nan,
                  nan, 6.82121379e-03,            nan,            nan,
                  nan,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan,
                  nan, 8.31175429e-03,            nan,            nan,
                  nan,            nan, 1.01779130e-02,            nan,
                  nan,            nan, 1.36919922e-02,            nan,
       6.23701825e-03, 1.79330750e-04,            nan,            nan,
                  nan,            nan,            nan, 8.32357655e-03,
                  nan,            nan,            nan,            nan,
                  nan, 5.02637302e-03,            nan, 4.03636130e-03,
                  nan,            nan,            nan, 5.02819454e-03,
                  nan,            nan,            nan, 3.80501027e-03,
                  nan,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan,
                  nan,            nan, 1.02306041e-02, 6.03076555e-03,
                  nan,            nan,            nan,            nan,
                  nan,            nan, 6.02232997e-03,            nan,
                  nan,            nan,            nan,            nan,
                  nan, 7.15894372e-03, 4.94275370e-03,            nan,
       9.82442565e-03,            nan,            nan,            nan,
                  nan, 6.16315666e-03,            nan,            nan,
                  nan,            nan,            nan,            nan,
                  nan,            nan,            nan,            nan]), 'rank_test_score': array([ 71, 138, 139, 140, 141, 142, 143, 144,  36, 145, 147, 156, 148,
       149, 150,  16, 151,  37, 152,  32,  12, 153,   7, 154,  43, 155,
        26, 137, 136, 135, 134,   6, 117, 118, 119, 120, 121, 122, 123,
       124,  42, 125, 126, 127,  41, 128, 129, 130, 131,  39,  15, 132,
        46, 133,   1, 146,  27, 158, 189, 159, 181, 182, 183, 184, 185,
        11,   2, 186, 187, 188, 190, 199,   5, 191, 192,  34,  38, 193,
       194, 195,  13,   8, 196, 197,  35, 198, 180, 179, 178, 177, 160,
       161, 162, 163, 164, 165,  10, 166, 167, 115, 169, 170, 171, 172,
        21,   9,  17, 173, 174,  44, 175, 176, 116, 157, 114, 101,  48,
        49,  50,  51,  60,  30,  70,  63,  56,  64,  18,  61,  69,  62,
        33,  55,  31,  45,  66,  68,  47,  67,  65,  28,  59,  58,  57,
        53,  52,  19,  54,  24,  92,  72,  95,   4,  96,  97,  98,  14,
        99, 100, 102, 104, 113, 105, 106, 107, 108, 109,  29,   3, 110,
       111, 112,  94, 103,  93,  40,  81,  73,  74,  75,  76,  77,  22,
        25,  78,  23,  79,  80,  82,  91,  20,  83,  84,  85,  86,  87,
        88,  89,  90, 168, 200], dtype=int32)}